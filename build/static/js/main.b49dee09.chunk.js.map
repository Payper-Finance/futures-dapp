{"version":3,"sources":["utils/config.js","ContextProvider.js","components/Sidebar.js","components/Stake.js","components/Snackbar.js","utils/wallet.js","utils/SnackbarUtils.js","utils/tezos.js","components/Position.js","components/TradeChart.js","components/PositionTable.js","components/Trade.js","components/LeaderBoard.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["NETWORK","RPC","PRECISION","CONTRACT_ADDRESS","vUSD_ADDRESS","UserContext","createContext","ContexProvider","children","useState","CPosiitonUpdated","setCPosiitonUpdated","maketPrice","setMarketPrice","kusdTokenBalance","setkusdTokenBalance","Provider","value","Sidebar","props","coinSelect","setCoinSelect","stake","useContext","useEffect","style","height","className","onClick","src","width","alt","minWidth","disabled","display","position","zIndex","right","marginTop","Dropdown","Toggle","variant","id","marginRight","bottom","marginBottom","fontSize","fontWeight","toUpperCase","Menu","Item","Stake","stakingTabs","setStakingTabs","rel","href","type","placeholder","name","color","marginLeft","Button","Snackbar1","show","setshow","Stack","spacing","sx","Snackbar","open","autoHideDuration","onClose","Alert","severity","message","transaction","target","textDecoration","wallet","BeaconWallet","preferredNetwork","connectWallet","requestPermissions","network","rpcUrl","disconnectWallet","clearActiveAccount","getAccount","client","getActiveAccount","activeAccount","address","SnackbarUtils","enqueueSnackbar","closeSnackbar","this","msg","options","toast","finalOptions","key","tezos","TezosToolkit","setWalletProvider","multiple","openPosition","base_value","leverage_multiple","direction","info","at","vmm_contract","vusd_contract","op1","methods","approve","toTransferParams","kind","OpKind","TRANSACTION","op2","increasePosition","batch","send","batchOp","confirmation","opHash","console","log","error","closePosition","state_name","withContractCall","decreasePosition","leverage","amount","success","removeMargin","addMargin","Position","positiondetail","graph","gethistory","Vmm","isTxn","setIsTxn","Addshow","setAddShow","Closeshow","setCloseShow","increaseshow","setIncreaseshow","decreaseshow","setDecreaseshow","closePostion","setClosePosition","rangeValue","setRangeValue","baseXrange","setbaseXrange","baseValue","setBaseValue","addmarginvalue","setaddmarginvalue","removemarginvalue","setremovemarginvalue","marginRatio","setmarginRatio","phbar","setPhbar","priceImpact","setPriceImpact","expectedClose","setExpectedClose","snackbarshow","setSnackbarshow","calculatedX","setCalculatedX","decreasePercentage","setdecreasePercentage","setType","calculateExpectedPrice","marratio","collateral_amount","vUSD_amount","parseFloat","perUsd","token_amount","VmmToken","position_value","x","invariant","priceimpact","marketprice","pertoken","Vmmtoken","setOpenlongpriceImpact","VmmUsd","actualToken","Math","abs","setOpenshortpriceImpact","IncreaseOrDecreaseFunc","then","res","undefined","catch","err","addBaseValue","decreasepositionvalue","max","round","ProgressBar","now","toFixed","entry_price","funding_amount","Modal","centered","onHide","backdrop","keyboard","Header","border","closeButton","Title","background","left","Body","onChange","event","borderRadius","margin","textAlign","padding","Box","Slider","defaultValue","valueLabelDisplay","min","Footer","ScaleLoader","parseInt","borderBottom","flexBasis","justifyContent","fontFamily","step","marks","top","socket","iO","TradeChart","activecandle","setActivecandle","chartRef","useRef","useLayoutEffect","root","am5","new","myTheme","rule","states","create","fill","stroke","setThemes","am5themes_Dark","am5themes_Responsive","stockChart","container","push","am5stock","numberFormatter","set","mainPanel","panels","wheelY","panX","panY","valueAxis","yAxes","am5xy","renderer","pan","maxPrecision","tooltip","numberFormat","extraTooltipPrecision","timeunit","dateAxis","xAxes","baseInterval","timeUnit","count","currentValueDataItem","createAxisRange","makeDataItem","currentLabel","get","setAll","currentGrid","strokeOpacity","strokeDasharray","valueSeries","series","clustered","valueXField","valueYField","highValueYField","lowValueYField","openValueYField","calculateAggregates","xAxis","yAxis","legendValueText","legendRangeValueText","plotContainer","visible","data","snapToSeries","snapToSeriesBy","scrollbar","orientation","toolsContainer","sbDateAxis","chart","sbValueAxis","sbSeries","fills","template","fillOpacity","data1","qs","stringify","axios","post","headers","dateFields","dateFormat","numericFields","processMany","loadData","greet","lastDataObject","getIndex","length","high","High","low","Low","Open","dObj2","Date","Close","setIndex","animate","to","duration","easing","out","cubic","getNumberFormatter","format","bg","interfaceColors","on","date","dObj1","insertvalue","current","dispose","$","document","ready","last","addClass","click","removeClass","PositionTable","getData","setGetData","fetchdata","header","positionhistory","reverse","Table","borderless","responsive","map","item","index","time","toLocaleString","liquidate","realizedpnl","alignItems","transform","p","m","Trade","setOpen","handleOpen","handleClose","isPosition","setIsPosition","liveposition","setliveposition","currentPosition","setCurrentPosition","indexprice","rate","longfundingrate","shortfundingrate","Expectedshortfundingrate","Expectedlongfundingrate","expectedpay","graphValues","setGraphValues","setShow","setVmm","getHistory","history","parse","upcoming_funding_time","minutes","floor","seconds","Vmmdata","vmm","current_mark_price","fundingRate","current_index_price","avrageValue","percentagevalue","expectedlongrate","expectedshortrate","positiveorneagative","total_long","total_short","fundingTime","long_funding_rate","short_funding_rate","positions","setInterval","funOpenPosition","component","noValidate","autoComplete","Typography","paddingTop","align","backgroundColor","LeaderBoard","searchaddress","isEmpty","setIsEmpty","array","setArray","size","setSize","page","setpage","startrange","setStartRange","range","setRange","getdata","result","i","rank","trunc","e","newvalue","concat","newArray","filter","el","Address","includes","onchange","slice","LiquidationCount","CompletedPosition","Totalpnl","alignItem","ClipLoader","Pagination","First","Prev","Next","Last","Main","React","anchorEl","setAnchorEl","Loading","setLoading","setAddress","tradeOrStake","setTradeOrStake","account","setAccount","isOpen","tokenBalance","setTokenBalance","popoverOpen","setpopoverOpen","gettokendata","accounts","getbalacnce","balance","onConnectWallet","onDisconnectWallet","getToken","sidebarmenu","substring","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onRequestClose","navigator","clipboard","writeText","alert","toggled","toggle","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.b49dee09.chunk.js","sourcesContent":["\nexport const NETWORK = 'ghostnet';\nexport const RPC = 'https://rpc.ghostnet.teztnets.xyz/';\nexport const PRECISION = 1000000000000000000;\nexport const CONTRACT_ADDRESS = \"KT1G3QTC2Dzp38eNqdSSkNCE62mnK3mt3iWJ\";\nexport const vUSD_ADDRESS = 'KT1D5xQy9x7YSgrzTzLJx9tEQ6qK9pSW2vfz';\n ","import { createContext, useState } from \"react\";\n\nconst UserContext = createContext();\n\nexport function ContexProvider({children}){\n    const [CPosiitonUpdated,setCPosiitonUpdated] = useState(true);\n    const [maketPrice,setMarketPrice] = useState(\"\")\n    const [kusdTokenBalance,setkusdTokenBalance] = useState(0)\n\n    \n    \n    return(\n        <UserContext.Provider value={{setCPosiitonUpdated,CPosiitonUpdated,setMarketPrice,maketPrice,setkusdTokenBalance,kusdTokenBalance}} >\n            {children}\n        </UserContext.Provider>\n    )\n\n}\nexport default UserContext;","import React, { useEffect, useState,useContext } from 'react'\nimport '../style/sidebar.css'\nimport {DropdownButton,Dropdown} from 'react-bootstrap'\nimport axios from 'axios'\nimport { PRECISION,CONTRACT_ADDRESS} from '../utils/config';\nimport UserContext from \"../ContextProvider.js\";\n\nconst Sidebar = (props) => {\n    const {coinSelect, setCoinSelect,stake} = props\n    const {maketPrice } = useContext(UserContext)\n\n    useEffect(()=>{\n\n    },[maketPrice])\n  return (\n    <>\n    <div style={{height:`${stake=='stake'?'100%':\"\"}`}} className='sidebar '>\n      <div className=\"coins\">\n        <div className={`${coinSelect === 'tezos'? 'sidebar-sel': '' } coin my-3 d-flex text-start`} onClick={()=>{setCoinSelect('tezos')}} >\n            <div className='mx-2'><img src=\"/img/tz.svg\" style={{width:'20px'}} alt=\"\" /></div>\n            <div style={{minWidth:'80px'}}>Tezos <br />XTZ</div>\n            <div  className='me-2 ms-auto text-end'>{maketPrice} kUSD</div>\n        </div>\n        <div disabled className={`${coinSelect === 'btc'? 'sidebar-sel': '' } coin my-3 d-flex text-start`} /*onClick={()=>{setCoinSelect('btc')}}*/ >\n            <div className='mx-2'><img src=\"img/btc.svg\" style={{width:'20px'}} alt=\"\" /></div>\n            <div style={{minWidth:'80px'}}>Bitcoin <br />BTC</div>\n            <div className='me-2 ms-auto text-end'>Coming soon</div>\n        </div>\n        <div disabled className={`${coinSelect === 'eth'? 'sidebar-sel': '' } coin my-3 d-flex text-start`} /* onClick={()=>{setCoinSelect('eth')}}*/ >\n            <div className='mx-2'><img src=\"img/eth.svg\" style={{width:'20px'}} alt=\"\" /></div>\n            <div style={{minWidth:'80px'}}>Ethereum<br />ETH</div>\n            <div className='me-2 ms-auto text-end'>Coming soon</div>\n        </div>\n      </div>\n    </div>\n    <div style={{display:`${stake =='stake'?\"none\":\"\"}`}} className=\"Dropdown\">\n      <span style={{position:\"absolute\", zIndex:\"1\", right:\"10%\",marginTop:\"6px\"}}><img src =\"img/Star 1.png\" /> </span>\n    \n    <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-item-button\">\n      <img style={{marginRight:\"10px\" ,position:\"relative\", bottom:\"3px\",marginBottom:\"5px\",width:\"30px\"}} src=\"img/tz.svg\" /><span style={{marginRight:\"10px\" ,position:\"relative\", bottom:\"3px\",marginBottom:\"5px\",fontSize:\"18px\",fontWeight:\"bold\"}}>{coinSelect.toUpperCase()}</span>\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item >Tezos</Dropdown.Item>\n        <Dropdown.Item >Bitcoin <span className='comingsoondropdown'>coming soon </span> </Dropdown.Item>\n        <Dropdown.Item >Ethereum <span className='comingsoondropdown'>coming soon </span></Dropdown.Item>\n      </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  </> \n  )\n}\n\nexport default Sidebar\n","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst Stake = () => {\n\n  const [stakingTabs, setStakingTabs] = useState('staking')\n\n\n  return (\n    <div className='stake p-5'>\n      <link rel=\"stylesheet\" href=\"/styles/stake.css\" />\n      <div className=\"heading-banner text-start p-5\">\n        <div className=\"heading-name p-4\">\n          <h2 className='fw-bolder'>Staking</h2>\n          <h5>Total in staking 106852 ZNTH</h5>\n        </div>\n        <div className=\"heading-infos d-flex\">\n          <div className=\"heading-info\">\n            <div className=\"heading-info-title\">Available to stake</div>\n            <div className=\"heading-info-value\">0 ZNTH</div>\n          </div>\n          <div className=\"heading-info\">\n            <div className=\"heading-info-title\">Staked Balance</div>\n            <div className=\"heading-info-value\">0 ZNTH</div>\n          </div>\n          <div className=\"heading-info\">\n            <div className=\"heading-info-title\">APY</div>\n            <div className=\"heading-info-value\">3.81%</div>\n          </div>\n          <div className=\"heading-info\">\n            <div className=\"heading-info-title\">Total profit</div>\n            <div className=\"heading-info-value\">0 kUSD</div>\n          </div>\n        </div>\n      </div>\n\n\n      <div className=\"stake-main d-flex\">\n        <div className=\"staking me-auto p-4\">\n          <div className=\"d-flex staking-tabs my-3 mx-2\">\n            <div className={`staking-tab  ${stakingTabs === 'staking'?'staking-tabs-sel':''} `} onClick={()=>{setStakingTabs('staking')}} >Staking</div>\n            <div className={`staking-tab  ${stakingTabs === 'unstaking'?'staking-tabs-sel':''} `} onClick={()=>{setStakingTabs('unstaking')}} >Unstaking</div>\n            <div className={`staking-tab  ${stakingTabs === 'claiming'?'staking-tabs-sel':''} `} onClick={()=>{setStakingTabs('claiming')}} >Claiming</div>\n          </div>\n\n\n          {stakingTabs==='staking'?(<>\n          <div className=\" w-100 staking-content d-flex\">\n            <input type=\"text\" className='x-auto px-3' placeholder='ZNTH' name=\"staking\" id=\"staking-input\" />\n            <button className='staking-btn'>0.00</button>\n          </div>\n          {/* <p className=\"text-danger text-start\">Insufficient XTZ balance</p> */}\n\n          <div className=\"profits\">\n            <div className=\"profit d-flex\">\n              <div className=\"me-auto\">Daily Profit</div>\n              <div><span className=\"text-success\">+0</span> kUSD</div>\n            </div>\n            <div className=\"profit d-flex\">\n              <div className=\"me-auto\">Monthly Profit</div>\n              <div><span className=\"text-success\">+0</span> kUSD</div>\n            </div>\n            <div className=\"profit d-flex\">\n              <div className=\"me-auto\">Yearly Profit</div>\n              <div><span className=\"text-success\">+0</span> kUSD</div>\n            </div>\n          </div>\n\n          <button className=\"staking-button\">Stake</button>\n          </>):\n          stakingTabs==='unstaking'?\n          <>\n            <div className=\" w-100 staking-content d-flex mt-4\">\n              <input type=\"text\" className='x-auto px-3' placeholder='ZNTH' name=\"staking\" id=\"staking-input\" />\n              <button className='staking-btn'>Amount</button>\n            </div>\n            <p className=\"text-start\">Staked 0 ZNTH.<span style={{fontSize:\"12px\",color:\"rgba(98, 108, 182, 1)\",marginLeft:\"5px\"}}>Spend the entire amount.</span> </p>\n          <button className=\"staking-button\">Unstake</button>\n          </>:\n          <>\n            <div className=\" w-100 staking-content d-flex mt-4\">\n              <input type=\"text\" className='w-100 px-3' placeholder='You will recieve    0.00 kUSD' name=\"staking\" id=\"staking-input\" />\n            </div>\n          <button className=\"staking-button my-5\">Claim</button>\n          </>\n          }\n\n        </div>\n        <div className='Balance'>\n          <h4>Balance</h4>\n          <input placeholder='0 ZNTH' type=\"text\"/>\n          <div className='availabel_stake_balance'>\n          <p>Available to Stake</p>\n          <p>0 ZNTH</p>\n          </div>\n          <Button>BUY ZNTH</Button>\n        </div>\n        \n        <div className=\"benefits  text-start p-4\">\n          <h3 className=\"fw-bold\">How do I benefit from staking?</h3>\n          <p>Protocol takes a flat 1% fee on each trade. Half of this amount is redistributed among the XTZ token stackers. Stakers will receive vUSD continuously proportional to their portion of the total XTZ in staking. Rewards will accrue every 1 hour.</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Stake\n","import React,{useState} from 'react';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\n\n\nexport default function Snackbar1({show,setshow,type}) {\n \n\n  return (\n    <Stack style={{position:\"absolute\"}} spacing={2} sx={{ width: '100%' }}>\n      {type.type==\"success\"?(\n <Snackbar open={show} autoHideDuration={6000} onClose={()=>setshow(false)}>\n <Alert onClose={()=>setshow(false)} severity=\"success\" sx={{ width: '100%' }}>\n {type.message}\n   <a href={`https://ghostnet.tzkt.io/${type.transaction}/`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color:\"blue\",textDecoration:\"underline\",marginLeft:\"10px\"}}> {type.transaction}</a>\n </Alert>\n</Snackbar>\n      ):(\n<Snackbar open={show} autoHideDuration={6000} onClose={()=>setshow(false)}>\n        <Alert onClose={()=>setshow(false)} severity=\"error\" sx={{ width: '100%' }}>\n        {type.message}\n          <a href={`https://ghostnet.tzkt.io/${type.transaction}/`}  target=\"_blank\" rel=\"noopener noreferrer\" style={{color:\"blue\",textDecoration:\"underline\",marginLeft:\"10px\"}}> {type.transaction}</a>\n        </Alert>\n      </Snackbar>\n      )}\n       \n      \n    \n    </Stack>\n  );\n}\n","// TODO 2.a - Setup beacon wallet instance\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport {NETWORK, RPC} from './config';\n\n\n\nexport const wallet = new BeaconWallet({\n  name: \"Zenith\",\n  preferredNetwork: NETWORK,\n});\n\n// TODO 2.b - Setup connectWallet function (on jakartanet)\nexport const connectWallet = async () => {\n  await wallet.requestPermissions({ network: { type: NETWORK, rpcUrl: RPC } });\n};\n\nexport const disconnectWallet = async () => {\n    await wallet.clearActiveAccount();\n  };\n\n// TODO 2.c - Setup getAccount function\n\nexport const getAccount = async () => {\n  const activeAccount = await wallet.client.getActiveAccount();\n  if (activeAccount) {\n    return activeAccount.address;\n  } else {\n    return \"\";\n  }\n};","class SnackbarUtils {\n  #snackBar = {\n    enqueueSnackbar: ()=>{},\n    closeSnackbar: () => {},\n  };\n\n  setSnackBar(enqueueSnackbar, closeSnackbar) {\n    this.#snackBar.enqueueSnackbar = enqueueSnackbar;\n    this.#snackBar.closeSnackbar = closeSnackbar;\n  }\n\n  success(msg, options = {}) {\n    return this.toast(msg, { ...options, variant: \"success\" });\n  }\n  warning(msg, options = {}) {\n    return this.toast(msg, { ...options, variant: \"warning\" });\n  }\n  info(msg, options = {}) {\n    return this.toast(msg, { ...options, variant: \"info\" });\n  }\n\n  error(msg, options = {}) {\n    return this.toast(msg, { ...options, variant: \"error\" });\n  }\n  toast(msg, options = {}) {\n    const finalOptions = {\n      variant: \"default\",\n      ...options,\n    };\n    return this.#snackBar.enqueueSnackbar(msg, { ...finalOptions });\n  }\n  closeSnackbar(key) {\n    this.#snackBar.closeSnackbar(key);\n  }\n}\n\nexport default new SnackbarUtils();","import { OpKind, TezosToolkit } from \"@taquito/taquito\";\nimport { wallet, getAccount } from \"./wallet\";\nimport { RPC } from './config'\nimport SnackbarUtils from './SnackbarUtils';\nimport axios from 'axios';\nimport { CONTRACT_ADDRESS,vUSD_ADDRESS } from \"./config\";\n\nexport const tezos = new TezosToolkit(RPC);\n\n\n\ntezos.setWalletProvider(wallet);\n\nexport const getBalance = async () => {\n    const address = await getAccount();\n    const getbalacnce = await axios.get(`https://api.ghostnet.tzkt.io/v1/contracts/${vUSD_ADDRESS}/bigmaps/balances/keys/${address}`)\n    if (getbalacnce.data == '') {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\n\nconst multiple = 1000000000000000000\n\n\nexport const openPosition = async (base_value, leverage_multiple, direction) => {\n\n    try {\n        const value = base_value * multiple\n        SnackbarUtils.info(\"Transaction in Process\");\n\n        SnackbarUtils.info(\"Connecting Account\");\n        const vmm_contract = await tezos.wallet.at(CONTRACT_ADDRESS);\n        SnackbarUtils.info(\"Connecting Contracts\");\n        const vusd_contract = await tezos.wallet.at(vUSD_ADDRESS);\n        SnackbarUtils.info(\"Transaction in Process\");\n\n        const op1 = vusd_contract.methods.approve(CONTRACT_ADDRESS, value).toTransferParams();\n        op1.kind = OpKind.TRANSACTION;\n\n        const op2 = vmm_contract.methods.increasePosition(direction, leverage_multiple, value).toTransferParams();\n        op2.kind = OpKind.TRANSACTION;\n        const batch = await tezos.wallet.batch([op1, op2]);\n        SnackbarUtils.info('Sending Txn')\n        const batchOp = await batch.send();\n        SnackbarUtils.info(\"Waiting for confirmation\")\n        await batchOp.confirmation()\n\n    return batchOp.opHash\n    } catch (err) {\n        console.log(err)\n        SnackbarUtils.error(\"Error Please Try Again\")\n    }\n}\n\nexport const closePosition = async (state_name) => {\n    try {\n        SnackbarUtils.info('Txn Started')\n        const vmm_contract = await tezos.wallet.at(CONTRACT_ADDRESS);\n        SnackbarUtils.info('Contract Connected')\n        const batch = await tezos.wallet.batch()\n            .withContractCall(vmm_contract.methods.closePosition(state_name));\n        SnackbarUtils.info('Sending Txn')\n        const batchOp = await batch.send();\n        SnackbarUtils.info(\"Waiting for confirmation\")\n        await batchOp.confirmation()\n        console.log(batchOp)\n\n        return batchOp.opHash\n    }\n    catch (err) {\n        console.log(err)\n        SnackbarUtils.error(\"Error Please Try Again\")\n    }\n\n\n}\n\n\nexport const decreasePosition = async (leverage, amount) => {\n    try {\n        SnackbarUtils.info('Txn Started')\n        const vmm_contract = await tezos.wallet.at(CONTRACT_ADDRESS);\n        SnackbarUtils.info('Contract Connected')\n        const batch = await tezos.wallet.batch()\n            .withContractCall(vmm_contract.methods.decreasePosition(leverage, amount * multiple));\n        SnackbarUtils.info('Sending Txn')\n        const batchOp = await batch.send();\n        SnackbarUtils.info(\"Waiting for confirmation\")\n        await batchOp.confirmation()\n        SnackbarUtils.success(\"Txn Success\")\n        const address = await getAccount();\n\n        return batchOp.opHash\n    }\n    catch (err) {\n        console.log(err)\n        SnackbarUtils.error(\"Error Please Try Again\")\n\n    }\n\n\n}\nexport const removeMargin = async (amount) => {\n    try {\n       \n\n        SnackbarUtils.info('Txn Started')\n        const vmm_contract = await tezos.wallet.at(CONTRACT_ADDRESS);\n        SnackbarUtils.info('Contract Connected')\n        const batch = await tezos.wallet.batch()\n            .withContractCall(vmm_contract.methods.removeMargin(amount * multiple));\n        SnackbarUtils.info('Sending Txn')\n        const batchOp = await batch.send();\n        SnackbarUtils.info(\"Waiting for confirmation\")\n        await batchOp.confirmation()\n        SnackbarUtils.success(\"Txn Success\")\n\n        return batchOp.opHash\n\n    }\n    catch (err) {\n        console.log(err)\n        SnackbarUtils.error(\"Error Please Try Again\")\n\n    }\n\n}\nexport const addMargin = async (value) => {\n    try {\n        SnackbarUtils.info('Txn Started')\n        const vmm_contract = await tezos.wallet.at(CONTRACT_ADDRESS);\n        SnackbarUtils.info('Contract Connected')\n        const vusd_contract = await tezos.wallet.at(vUSD_ADDRESS);\n        SnackbarUtils.info(\"Transaction in Process\");\n        const batch = await tezos.wallet.batch()\n            .withContractCall(vusd_contract.methods.approve(CONTRACT_ADDRESS, value * multiple))\n            .withContractCall(vmm_contract.methods.addMargin(value * multiple))\n\n        SnackbarUtils.info('Sending Txn')\n        const batchOp = await batch.send();\n        SnackbarUtils.info(\"Waiting for confirmation\")\n        await batchOp.confirmation()\n        SnackbarUtils.success(\"Txn Success\")\n\n        return batchOp.opHash\n\n    }\n    catch (err) {\n        console.log(err)\n        SnackbarUtils.error(\"Error Please Try Again\")\n    }\n\n}","import React, { useEffect, useState, useContext } from 'react'\nimport { ProgressBar, Modal } from 'react-bootstrap';\nimport Button from '@mui/material/Button';\nimport Snackbar from './Snackbar'\nimport '../style/tradeModel.css'\nimport { Slider } from '@mui/material';\nimport UserContext from \"../ContextProvider.js\";\nimport { ScaleLoader } from 'react-spinners'\nimport { PRECISION } from '../utils/config';\nimport Box from '@mui/material/Box';\nimport { addMargin, closePosition, decreasePosition, openPosition, removeMargin } from '../utils/tezos';\nimport { parse } from 'qs';\n\n\nexport default function Position({ positiondetail, graph, gethistory, Vmm }) {\n\n    const { setCPosiitonUpdated, CPosiitonUpdated, kusdTokenBalance } = useContext(UserContext)\n    const [isTxn, setIsTxn] = useState(false);\n    const [Addshow, setAddShow] = useState(false);\n    const [Closeshow, setCloseShow] = useState(false);\n    const [increaseshow, setIncreaseshow] = useState(false);\n    const [decreaseshow, setDecreaseshow] = useState(false);\n    const [closePostion, setClosePosition] = useState(false)\n    const [rangeValue, setRangeValue] = useState(1)\n    const [baseXrange, setbaseXrange] = useState(0);\n    const [baseValue, setBaseValue] = useState(0)\n    const [addmarginvalue, setaddmarginvalue] = useState(0)\n    const [removemarginvalue, setremovemarginvalue] = useState(0)\n    const [marginRatio, setmarginRatio] = useState(0)\n    const [phbar, setPhbar] = useState(0)\n    const [priceImpact, setPriceImpact] = useState(0)\n    const [expectedClose, setExpectedClose] = useState(0)\n    const [snackbarshow, setSnackbarshow] = useState(false)\n    const [calculatedX, setCalculatedX] = useState(0);\n    const [decreasePercentage, setdecreasePercentage] = useState(0);\n    \n    const [type, setType] = useState(\n        {\n            type: \"\",\n            message: \"\",\n            transaction: \"\"\n        }\n    )\n\n    useEffect(() => {\n        calculateExpectedPrice()\n\n        let marratio = 0;\n        if (positiondetail.position == 1) {\n            marratio = (positiondetail.collateral_amount / PRECISION) + (calculatedX - positiondetail.vUSD_amount / PRECISION)\n\n        }\n        else {\n            marratio = (positiondetail.collateral_amount / PRECISION) + (positiondetail.vUSD_amount / PRECISION - calculatedX)\n        }\n        var max_reduce = (parseFloat(marratio) / (parseFloat(positiondetail.vUSD_amount) / PRECISION))-0.3\n        // console.log(max_reduce*(parseFloat(positiondetail.vUSD_amount) / PRECISION))\n        \n        setmarginRatio(parseFloat(marratio) / (parseFloat(positiondetail.vUSD_amount) / PRECISION))\n        setPhbar(marginRatio * 100)\n\n    }, [phbar, marginRatio, positiondetail, graph])\n\n\n\n    const calculateExpectedPrice = () => {\n        if (positiondetail.position == 2) {\n            let perUsd = Vmm.vUSD_amount / Vmm.token_amount\n            let VmmToken = Vmm.token_amount - (positiondetail.position_value / PRECISION);\n            let x = (Vmm.invariant / VmmToken) - Vmm.vUSD_amount\n            setCalculatedX(x)\n            let actualToken = x / (positiondetail.position_value / PRECISION)\n            let priceimpact = ((actualToken - perUsd) * 100) / perUsd\n            setExpectedClose(graph.marketprice - (priceimpact / 100))\n\n        }\n        if (positiondetail.position == 1) {\n            let pertoken = Vmm.token_amount / Vmm.vUSD_amount\n            let Vmmtoken = Vmm.token_amount + (positiondetail.position_value / PRECISION);\n            let x = Vmm.vUSD_amount - (Vmm.invariant / Vmmtoken)\n            setCalculatedX(x)\n            let actualToken = (positiondetail.position_value / PRECISION) / x\n            let priceimpact = ((actualToken - pertoken) * 100) / pertoken\n            setExpectedClose(graph.marketprice - (priceimpact / 100))\n        }\n    }\n\n    const setOpenlongpriceImpact = () => {\n\n        let perUsd = Vmm.vUSD_amount / Vmm.token_amount\n        let VmmUsd = Vmm.vUSD_amount + (baseXrange);\n        let x = (Vmm.invariant / VmmUsd) - Vmm.token_amount\n        let actualToken = (baseXrange) / Math.abs(x)\n        let priceimpact = ((actualToken - perUsd) * 100) / perUsd\n        setPriceImpact(priceimpact)\n    }\n    const setOpenshortpriceImpact = () => {\n        let pertoken = Vmm.token_amount / Vmm.vUSD_amount\n        let Vmmtoken = Vmm.vUSD_amount - (baseXrange);\n        let x = (Vmm.invariant / Vmmtoken) - Vmm.token_amount\n        let actualToken = Math.abs(x) / (baseXrange)\n        let priceimpact = ((actualToken - pertoken) * 100) / pertoken\n        setPriceImpact(priceimpact)\n    }\n\n\n\n    useEffect(() => {\n        setbaseXrange(baseValue * rangeValue)\n        if (increaseshow) {\n\n            setOpenlongpriceImpact()\n        }\n        if (decreaseshow) {\n            setOpenshortpriceImpact()\n        }\n    }, [baseValue, rangeValue, baseXrange])\n\n\n\n    const IncreaseOrDecreaseFunc = async (baseValue, rangeValue, direction) => {\n\n        try {\n            setIsTxn(true)\n            await openPosition(baseValue, rangeValue, direction).then(res => {\n                console.log(\"response::: \" + res)\n                gethistory()\n                setIncreaseshow(false)\n                setCPosiitonUpdated(true)\n                setIsTxn(false)\n                if (res == undefined) {\n                    setType(\n                        {\n                            type: \"Failed\",\n                            message: \"Transaction Aborted !\",\n                        }\n                    )\n                    setSnackbarshow(true)\n                } else {\n                    setType(\n                        {\n                            type: \"success\",\n                            message: \"Transaction Successful!\",\n                            transaction: res\n                        }\n                    )\n                    setSnackbarshow(true)\n                    setCPosiitonUpdated(true)\n                }\n\n            }).catch(err => {\n                setType(\n                    {\n                        type: \"Failed\",\n                        message: \"Transaction Failed !\",\n                    }\n                )\n                setSnackbarshow(true)\n            })\n\n        }\n        catch (err) {\n            console.log(err)\n            setIsTxn(false)\n\n        }\n\n\n\n\n\n\n    }\n    const addBaseValue = async (value) => {\n        var amount = (kusdTokenBalance / 100) * value\n        setBaseValue(amount)\n    }\n    const decreasepositionvalue = async (value) => {\n       var max = (parseFloat(positiondetail.position_value)/PRECISION)*parseFloat(graph.marketprice) \n       setBaseValue(Math.round(max*value/100))\n       setdecreasePercentage(value)\n\n    }\n    \n\n    return (\n        <>\n            <Snackbar show={snackbarshow} setshow={setSnackbarshow} type={type} />\n            <section className='tradePostion'>\n                <div className='positon_Health'>\n                    <h3>Position Health</h3>\n                    {phbar > 30 ? <div><ProgressBar now={phbar} /></div> : (\n                        <div><ProgressBar className='phWeak' now={phbar} /></div>\n                    )}\n\n                    <div className='figure_values'>\n                        <div className='tpfigures'>\n                            <p>Margin</p>\n                            <p>Margin Ratio</p>\n                            {/* <p>Liquidation Price</p> */}\n                        </div>\n                        <div className='tpValues'>\n                            <p>\n                                {\n                                    positiondetail.position == 1 ? (((positiondetail.collateral_amount / PRECISION) + (calculatedX - positiondetail.vUSD_amount / PRECISION)).toFixed(4)) : (\n                                        ((positiondetail.collateral_amount / PRECISION) + (positiondetail.vUSD_amount / PRECISION - calculatedX)).toFixed(4)\n                                    )\n                                }\n                                kUSD</p>\n                            <p>{marginRatio}</p>\n                            {/* <p>{((positiondetail.collateral_amount/1000000).toFixed(2)/100)*8.5} kUSD</p> */}\n                        </div>\n                    </div>\n                    <Button className=\"tphAdd\" onClick={() => setAddShow(true)} >+ ADD</Button>\n                    <Button className=\"tphDec\" onClick={() => setCloseShow(true)}>- Reduce</Button>\n                </div>\n                <div className='positon_Status'>\n                    <h3>Position Status</h3>\n                    <div>\n                        <div className='tpstatus'>\n                            <p >{positiondetail.position == 1 ? \"Long position\" : \"Short Position\"}  </p>\n                            <p>{(positiondetail.position_value / PRECISION).toFixed(4)} XTZ</p>\n                            <p style={{ fontWeight: \"bold\" }} className=\"tpstatus_mobileview\">Unrealized PNL</p>\n                            <p className=\"tpstatus_mobileview_item\">\n                                {\n\n                                    positiondetail.position == 1 ? (\n                                        (calculatedX - positiondetail.vUSD_amount / PRECISION) < 0 ? (\n                                            <span style={{ color: \"#E01B3C\", fontWeight: \"bold\" }}>\n                                                {(calculatedX - positiondetail.vUSD_amount / PRECISION).toFixed(4)} kUSD </span>\n                                        ) : (\n                                            <span style={{ color: \"#1ECC89\", fontWeight: \"bold\" }}> {(calculatedX - positiondetail.vUSD_amount / PRECISION).toFixed(4)} kUSD</span>\n                                        )\n                                    ) : (\n                                        (positiondetail.vUSD_amount / PRECISION - calculatedX) < 0 ? (\n                                            <span style={{ color: \"#E01B3C\", fontWeight: \"bold\" }}>\n                                                {(positiondetail.vUSD_amount / PRECISION - calculatedX).toFixed(4)} kUSD </span>\n                                        ) : (\n                                            <span style={{ color: \"#1ECC89\", fontWeight: \"bold\" }}> {(positiondetail.vUSD_amount / PRECISION - calculatedX).toFixed(4)} kUSD</span>\n                                        )\n                                    )\n                                }\n\n\n                            </p>\n                            <Button onClick={() => setClosePosition(true)}>Close Position</Button>\n                        </div>\n                        <div className='tps_figures_values' >\n                            <div>\n                                <div className='tpsfigure'>\n                                    <p>Entry Price</p>\n                                    <p>Market Price</p>\n                                    <p>Expected Close Price</p>\n                                    <p>Net Funding</p>\n                                </div>\n                                <div className='tpsValues'>\n                                    <p>{(parseFloat(positiondetail.entry_price) / PRECISION).toFixed(4)} XTZ</p>\n                                    <p>{graph.marketprice} XTZ</p>\n                                    <p>{expectedClose.toFixed(4)}  XTZ</p>\n                                    {\n                                        positiondetail.funding_amount < 0 ? (\n                                            <p style={{ color: \"#E01B3C\" }}>{(positiondetail.funding_amount / PRECISION).toFixed(4)}</p>\n\n                                        ) : (\n                                            <p style={{ color: \"#1ECC89\" }}>{(positiondetail.funding_amount / PRECISION).toFixed(4)}</p>\n\n\n                                        )\n                                    }\n                                </div>\n                            </div>\n                            <Button className='tphAdd' style={{ fontSize: \"14px\" }} onClick={() => setIncreaseshow(true)}>+ INCREASE</Button>\n                            <Button className='tphDec' style={{ fontSize: \"14px\" }} onClick={() => setDecreaseshow(true)}>- DECREASE</Button>\n                        </div>\n\n                    </div>\n\n                </div>\n            </section>\n\n            <Modal\n                centered\n                show={Addshow}\n                onHide={setAddShow}\n                backdrop=\"static\"\n                keyboard={false}\n\n            >\n                <Modal.Header style={{ border: \"none\" }} closeButton>\n                    <Modal.Title style={{ fontWeight: \"bold\" }} >Add Margin</Modal.Title>\n                    <Button style={{ background: \"none\", border: \"none\", position: \"relative\", left: '20px' }}><img style={{ height: \"25px\" }} onClick={() => {\n                        setAddShow(false)\n                        setIsTxn(false)\n                    }\n                    } src='/img/icons8-close-30.png' /></Button>\n                </Modal.Header>\n                <Modal.Body>\n                    <span style={{ position: \"absolute\", marginTop: \"7px\", marginLeft: \"15px\" }}><img style={{ height: \"25px\" }} src='/img/kusd.png' /></span>\n                    <input value={addmarginvalue} type=\"number\" onChange={async(event) => setaddmarginvalue((parseFloat(event.target.value)<=kusdTokenBalance)?event.target.value:addmarginvalue)} style={{ width: \"100%\", height: \"40px\", borderRadius: \"5px\", margin: \"2px 0px\", background: \"#30313d\", border: \"none\", textAlign: \"right\", padding: \"0 10px\" }} placeholder='Amount' />\n                        <Box sx={{ width: 300 }} style={{marginLeft:\"6px\"}}>\n                            <Slider\n                                defaultValue={0}\n                                aria-label=\"Default\"\n                                valueLabelDisplay=\"auto\"\n                                value={addmarginvalue}\n                                min={0}\n                                max={kusdTokenBalance}\n                            onChange={(event) => setaddmarginvalue(event.target.value)}\n                            />\n                        </Box>\n                    {/* <div className='marginbodydiv' style={{ borderBottom: \"0.5px solid #30313d\", fontWeight: \"bold\" }}>\n                        <p>Liquidation price</p>\n                        <p>{((positiondetail.collateral_amount/1000000).toFixed(2)/100)*8.5} kUSD</p>\n                    </div> */}\n                    <div className='marginbodydiv' style={{ marginTop: \"10px\" }}>\n                        <p>Position margin</p>\n                        <p>{(parseFloat((positiondetail.collateral_amount / PRECISION).toFixed(4)) + parseFloat(addmarginvalue)).toFixed(3)} kUSD</p>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer style={{ border: \"none\" }} >\n                    {isTxn ? (<span style={{ width: \"100% !important\", position: \"relative\", left: \"-35%\" }}><ScaleLoader color='#1ECC89' width={7} margin={6} /> </span>) : (\n                        <Button variant=\"secondary\" onClick={async () => {\n                            try {\n                                setIsTxn(true)\n                                await addMargin(addmarginvalue).then(res => {\n                                    gethistory()\n                                    setIsTxn(false)\n                                    if (res == undefined) {\n                                        setType(\n                                            {\n                                                type: \"Failed\",\n                                                message: \"Transaction Aborted !\",\n                                            }\n                                        )\n                                        setSnackbarshow(true)\n                                    } else {\n                                        setCPosiitonUpdated(true)\n                                        setType(\n                                            {\n                                                type: \"success\",\n                                                message: \"Transaction Successful!,\",\n                                                transaction: res\n                                            }\n                                        )\n                                        setSnackbarshow(true)\n                                    }\n                                }).catch(res => {\n                                    setType(\n                                        {\n                                            type: \"failed\",\n                                            message: \"Transaction failed!\",\n                                            // transaction: res\n                                        }\n                                    )\n                                    setSnackbarshow(true)\n                                })\n\n                            }\n                            catch (err) {\n                                console.log(err)\n                                setIsTxn(false)\n                                setType(\n                                    {\n                                        type: \"failed\",\n                                        message: \"Transaction failed!\",\n                                        // transaction: res\n                                    }\n                                )\n                                setSnackbarshow(true)\n                            }\n\n                        }}\n                            style={{ minWidth: \"98%\", background: \"#1ECC89\" }}\n                        >\n                            ADD\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n\n\n\n            <Modal\n                centered\n                show={Closeshow}\n                onHide={() => setCloseShow(false)}\n                backdrop=\"static\"\n                keyboard={false}\n\n            >\n                <Modal.Header style={{ border: \"none\" }} closeButton>\n                    <Modal.Title style={{ fontWeight: \"bold\" }} >Reduce Margin</Modal.Title>\n                    <Button style={{ background: \"none\", border: \"none\", position: \"relative\", left: '20px' }}><img style={{ height: \"25px\" }} onClick={() => {\n                        setCloseShow(false)\n\n                        setIsTxn(false)\n                    }} src='/img/icons8-close-30.png' /></Button>\n\n                </Modal.Header>\n                <Modal.Body>\n\n                    <span style={{ position: \"absolute\", marginTop: \"7px\", marginLeft: \"15px\" }}><img style={{ height: \"25px\" }} src='/img/kusd.png' /></span>\n                    <input value={removemarginvalue} type=\"number\" min=\"0\" max=\"100000000\" onChange={(event) => setremovemarginvalue(event.target.value)} style={{ width: \"100%\", height: \"40px\", borderRadius: \"5px\", margin: \"2px 0px\", background: \"#30313d\", border: \"none\", textAlign: \"right\", padding: \"0 10px\" }} placeholder='Amount' />\n                    <Box sx={{ width: 300 }} style={{marginLeft:\"6px\"}}>\n                            <Slider\n                                defaultValue={0}\n                                aria-label=\"Default\"\n                                valueLabelDisplay=\"auto\"\n                                value={removemarginvalue}\n                                min ={0}\n                                max ={(marginRatio-0.3)*(parseFloat(positiondetail.vUSD_amount) / PRECISION)}\n                            onChange={(event) => setremovemarginvalue(event.target.value)}\n                            />\n                        </Box>\n                    {/* <div className='marginbodydiv' style={{ borderBottom: \"0.5px solid #30313d\", fontWeight: \"bold\" }}>\n                        <p>Liquidation price</p>\n                        <p>{((positiondetail.collateral_amount/1000000).toFixed(2)/100)*8.5} kUSD</p>\n                    </div> */}\n                    <div className='marginbodydiv' style={{ marginTop: \"10px\" }}>\n                        <p>Position margin</p>\n                        <p>{(parseFloat((positiondetail.collateral_amount / PRECISION).toFixed(4)) - parseFloat(removemarginvalue)).toFixed(4)} kUSD</p>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer style={{ border: \"none\" }} >\n                    {isTxn ? (<span style={{ width: \"100% !important\", position: \"relative\", left: \"-35%\" }}><ScaleLoader color='#E01B3C' width={7} margin={6} /> </span>) : (\n                        <Button variant=\"secondary\" onClick={async () => {\n                            try {\n                                setIsTxn(true)\n                                await removeMargin(parseInt(removemarginvalue)).then(res => {\n                                    gethistory()\n                                    setIsTxn(false)\n\n                                    if (res == undefined) {\n                                        setType(\n                                            {\n                                                type: \"Failed\",\n                                                message: \"Transaction Aborted !\",\n                                            }\n                                        )\n                                        setSnackbarshow(true)\n                                    } else {\n                                        setType(\n                                            {\n                                                type: \"success\",\n                                                message: \"Transaction Successful!,\",\n                                                transaction: res\n                                            }\n                                        )\n                                        setSnackbarshow(true)\n                                    }\n                                }).catch(err => {\n                                    setType(\n                                        {\n                                            type: \"failed\",\n                                            message: \"Transaction failed!\",\n                                            // transaction: res\n                                        }\n                                    )\n                                    setSnackbarshow(true)\n                                })\n                            }\n                            catch (err) {\n                                console.log(err)\n                                setIsTxn(false)\n                                setType(\n                                    {\n                                        type: \"failed\",\n                                        message: \"Transaction failed!\",\n                                    }\n                                )\n                                setSnackbarshow(true)\n                            }\n                        }}\n                            style={{ minWidth: \"98%\", background: \"#e01b3c\" }}\n                        >\n                            Reduce\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n\n\n            {/* ----------------------------CLose Position Modal ------------------------------------------------------- */}\n\n            <Modal\n                centered\n                show={closePostion}\n                onHide={closePostion}\n                backdrop=\"static\"\n                keyboard={false}\n\n            >\n                <Modal.Header style={{ border: \"none\" }} closeButton>\n                    <Modal.Title style={{ fontWeight: \"bold\" }} >Close Position</Modal.Title>\n                    <Button style={{ background: \"none\", border: \"none\", position: \"relative\", left: '20px' }}><img style={{ height: \"25px\" }} onClick={() => {\n                        setClosePosition(false)\n                        setIsTxn(false)\n                    }} src='/img/icons8-close-30.png' /></Button>\n                </Modal.Header>\n                <Modal.Body>\n                    <p style={{ fontSize: \"14px\", color: \"#96979c\" }}>Are you sure you want to close the position?</p>\n\n                    <div className='marginbodydiv' style={{ borderBottom: \"0.5px solid #30313d\", fontWeight: \"bold\" }}>\n                        <p style={{ flexBasis: \"55%\" }}>Expected Close Price</p>\n                        <p>{expectedClose.toFixed(4)}</p>\n                    </div>\n                    <div className='marginbodydiv' style={{ marginTop: \"10px\", fontWeight: \"bold\" }}>\n                        <p>Your Profit</p>\n                        <p>\n                            {\n\n                                positiondetail.position == 1 ? (\n                                    ((calculatedX - (positiondetail.vUSD_amount / PRECISION)) + (positiondetail.funding_amount / PRECISION)) < 0 ? (\n                                        <span style={{ color: \"#E01B3C\", fontWeight: \"bold\" }}>\n                                            {((calculatedX - (positiondetail.vUSD_amount / PRECISION)) + positiondetail.funding_amount / PRECISION).toFixed(4)} kUSD </span>\n                                    ) : (\n                                        <span style={{ color: \"#1ECC89\", fontWeight: \"bold\" }}> {((calculatedX - positiondetail.vUSD_amount / PRECISION) + positiondetail.funding_amount / PRECISION).toFixed(4)} kUSD</span>\n                                    )\n                                ) : (\n                                    (((positiondetail.vUSD_amount / PRECISION) - calculatedX) + positiondetail.funding_amount / PRECISION) < 0 ? (\n                                        <span style={{ color: \"#E01B3C\", fontWeight: \"bold\" }}>\n                                            {(((positiondetail.vUSD_amount / PRECISION) - calculatedX) + positiondetail.funding_amount / PRECISION).toFixed(4)} kUSD </span>\n                                    ) : (\n                                        <span style={{ color: \"#1ECC89\", fontWeight: \"bold\" }}> {((positiondetail.vUSD_amount / PRECISION - calculatedX) + positiondetail.funding_amount / PRECISION).toFixed(4)} kUSD</span>\n                                    )\n                                )\n                            }\n                        </p>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer style={{ border: \"none\", display: \"flex\", width: \"100%\", justifyContent: \"center\" }} >\n\n                    {isTxn ? (<span style={{ width: \"100% !important\", position: \"relative\", left: \"0%\" }}><ScaleLoader color='#1ECC89' width={7} margin={6} /> </span>) : (\n                        <>\n                            <Button variant=\"secondary\"\n                                onClick={\n                                    async () => {\n                                        try {\n                                            setIsTxn(true);\n                                            await closePosition().then(res => {\n                                                if (res == \"success\") {\n                                                    setIsTxn(false);\n                                                    setClosePosition(false)\n                                                    setCPosiitonUpdated(CPosiitonUpdated ? true : false)\n\n                                                }\n                                            }).catch((err) => {\n                                                console.log(err)\n                                                // SnackbarUtils.error(\"Error Please Try Again\")\n                                                setIsTxn(false);\n                                                setClosePosition(false)\n                                                setType(\n                                                    {\n                                                        type: \"success\",\n                                                        message: \"Transaction Successful!,\",\n                                                        // transaction: res\n                                                    }\n                                                )\n                                                setSnackbarshow(true)\n                                            });\n\n                                        }\n                                        catch (err) {\n                                            setIsTxn(false);\n                                        }\n\n                                    }\n                                }\n                                style={{ minWidth: \"42%\", marginRight: \"10px\", background: \"#1ECC89\", fontWeight: \"bold\" }}\n                            >\n                                Yes\n                            </Button>\n                            <Button variant=\"secondary\" onClick={() => setClosePosition(false)}\n                                style={{ minWidth: \"42%\", background: \"#e01b3c\", fontWeight: \"bold\" }}\n                            >\n                                No\n                            </Button>\n                        </>\n                    )\n                    }\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n\n\n\n\n\n\n\n\n            {/*----------------------------------- increase decrease  -------------------------------------- */}\n            <Modal\n                show={increaseshow}\n                open={true}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Modal.Header style={{ border: \"none\", position: \"relative\", left: \"10px\" }} closeButton>\n                    <Modal.Title style={{ fontWeight: \"bold\" }} >Increase Position</Modal.Title>\n                    <Button style={{ background: \"none\", border: \"none\", position: \"relative\", left: '10px' }}><img style={{ height: \"25px\" }} onClick={() => {\n                        setIncreaseshow(false)\n                        setIsTxn(false)\n                    }} src='/img/icons8-close-30.png' /></Button>\n\n                </Modal.Header>\n                <Modal.Body style={{ position: \"relative\", left: \"10px\" }}>\n                    <div className='tradebox_amount'>\n                        <span className='tradebox_inputicon'><img style={{ padding: \"0 6px\", marginTop: \"-4px\", height: \"32px\" }} src=\"img/kusd.png\" alt=\"\" />kUSD</span>\n                        <input value={baseValue} style={{ fontFamily: \"'Inter', sans-serif\" }} type=\"number\" min=\"0\" max=\"100000000\" step=\"0.01\" className=\"tradebox\" id=\"outlined-basic\" placeholder=\"Amount\" variant=\"outlined\" onChange={(event) => setBaseValue(event.target.value, setOpenlongpriceImpact())} />\n                        <div style={{ width: \"100%\", position: \"relative\", fontSize: \"11px\", height: \"10px\", fontWeight: \"bold\", margin: \"2px 0\", padding: \"2px 0\", color: \"#a9a9a9\" }}>\n                            <div style={{ position: \"absolute\", right: \"10px\" }}>\n                                <button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(25) }} >25%</button>\n                                <button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(50) }} >50%</button>\n                                <button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(75) }} >75%</button>\n                                <button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(100) }} >100%</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ marginTop: \"10px\" }} className='tradebox_leverage'>\n                        <h6>Leverage</h6>\n                        <Slider\n                            aria-label=\"Temperature\"\n                            defaultValue={1}\n                            className=\"tradebox_levslider\"\n                            value={rangeValue}\n                            onChange={(event) => setRangeValue(event.target.value)}\n                            color={'primary'}\n                            sx={{ color: `grey` }}\n                            step={1}\n                            marks\n                            min={1}\n                            max={3}\n                            style={{ width: '90%' }} /> <span style={{ position: \"absolute\", bottom: \"6px\", fontSize: \"14px\", right: \"25px\", fontWeight: \"bold\" }}>{rangeValue}x</span> <br />\n                    </div>\n                    <p style={{ fontFamily: \"'Inter', sans-serif\", fontSize: \"13px\", fontWeight: \"600\", marginTop: \"20px\", marginLeft: \"-8px\" }}>You are buying in the long</p>\n                    <table className='tradebox_table1' style={{ width: \"100%\" }}>\n                        <tbody>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Position size</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseXrange == 0 ? ((baseValue == null) ? 0 : (baseValue / graph.marketprice).toFixed(4)) : ((baseXrange / graph.marketprice).toFixed(4))} XTZ <img src=\"img/tz.svg\" /></td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Entry price</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{graph.marketprice} kUSD <img style={{ width: \"20px\" }} src=\"img/kusd.png\" /></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <hr style={{ position: \"relative\", left: \"-10px\", width: \"100%\", top: \"20px\" }} />\n\n\n                    <table className='tradebox_table1' style={{ width: \"100%\" }}>\n                        <tbody>\n                            <tr style={{ width: \"100%\", }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Amount</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue} kUSD</td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"70%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Trading Fee</td>\n                                <td style={{ width: \"30%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{(baseValue / 100) * 2} kUSD</td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Price impact</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue == 0 ? 0 : priceImpact.toFixed(4)}%</td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"70%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Slippage tolerance</td>\n                                <td style={{ width: \"30%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>2%</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </Modal.Body>\n                <Modal.Footer style={{ border: \"none\" }} >\n                    {isTxn ? (<span style={{ width: \"100% !important\", position: \"relative\", left: \"-35%\" }}><ScaleLoader color='#1ECC89' width={7} margin={6} /> </span>) : (\n                        <Button variant=\"secondary\"\n                            style={{ minWidth: \"98%\", background: \"#1ECC89\", fontWeight: \"bold\" }}\n                            onClick={() => IncreaseOrDecreaseFunc(baseValue, rangeValue, positiondetail.position)}\n\n                        >\n                            INCREASE\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <Modal\n                show={decreaseshow}\n                open={true}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Modal.Header style={{ border: \"none\", position: \"relative\", left: \"10px\" }} closeButton>\n                    <Modal.Title style={{ fontWeight: \"bold\" }} >Decrease Position</Modal.Title>\n                    <Button style={{ background: \"none\", border: \"none\", position: \"relative\", left: '10px' }}><img style={{ height: \"25px\" }} onClick={() => {\n                        setDecreaseshow(false)\n                        setIsTxn(false)\n                    }} src='/img/icons8-close-30.png' /></Button>\n\n                </Modal.Header>\n                <Modal.Body style={{ position: \"relative\", left: \"10px\" }}>\n                    <div className='tradebox_amount'>\n                        <span className='tradebox_inputicon'><img style={{ padding: \"0 6px\", marginTop: \"-4px\", height: \"32px\" }} src=\"img/kusd.png\" alt=\"\" />kUSD</span>\n                        <input value={baseValue} style={{ fontFamily: \"'Inter', sans-serif\" }} type=\"number\" min=\"0\" max=\"100000000\" step=\"0.01\" className=\"tradebox\" id=\"outlined-basic\" placeholder=\"Amount\" variant=\"outlined\" onChange={(event) => setBaseValue(event.target.value )}/>\n                        <div style={{ width: \"100%\", position: \"relative\", fontSize: \"11px\", height: \"10px\", fontWeight: \"bold\", margin: \"2px 0\", padding: \"2px 0\", color: \"#a9a9a9\" }}>\n                            <div style={{ position: \"absolute\", right: \"10px\" }}>\n                                <button type='button' className='amount_percent_btn' onClick={() => { decreasepositionvalue(25) }} >25%</button>\n                                <button type='button' className='amount_percent_btn' onClick={() => { decreasepositionvalue(50) }} >50%</button>\n                                <button type='button' className='amount_percent_btn' onClick={() => { decreasepositionvalue(75) }} >75%</button>\n                                <button type='button' className='amount_percent_btn' onClick={() => { decreasepositionvalue(100) }} >100%</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ marginTop: \"10px\" }} className='tradebox_leverage'>\n                        <h6>Leverage</h6>\n                        <Slider\n                            aria-label=\"Temperature\"\n                            defaultValue={1}\n                            className=\"tradebox_levslider\"\n                            value={rangeValue}\n                            onChange={(event) => setRangeValue(decreasePercentage>74?1:decreasePercentage==50? (event.target.value==3?2:event.target.value):event.target.value)}\n                            color={'primary'}\n                            sx={{ color: `grey` }}\n                            step={1}\n                            marks\n                            min={1}\n                            max={3}\n                            style={{ width: '90%' }} /> <span style={{ position: \"absolute\", bottom: \"6px\", fontSize: \"14px\", right: \"25px\", fontWeight: \"bold\" }}>{rangeValue}x</span> <br />\n                    </div>\n                    <p style={{ fontFamily: \"'Inter', sans-serif\", fontSize: \"13px\", fontWeight: \"600\", marginTop: \"20px\", marginLeft: \"-8px\" }}>You are buying in the long</p>\n                    <table className='tradebox_table1' style={{ width: \"100%\" }}>\n                        <tbody>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Position size</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseXrange == 0 ? ((baseValue == null) ? 0 : (baseValue / graph.marketprice).toFixed(2)) : ((baseXrange / graph.marketprice).toFixed(4))} XTZ <img src=\"img/tz.svg\" /></td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Entry price</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{graph.marketprice} vUSD <img style={{ width: \"20px\" }} src=\"img/kusd.png\" /></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <hr style={{ position: \"relative\", left: \"-10px\", width: \"100%\", top: \"20px\" }} />\n\n\n                    <table className='tradebox_table1' style={{ width: \"100%\" }}>\n                        <tbody>\n                            <tr style={{ width: \"100%\", }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Amount</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue} kUSD</td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Trading Fee</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{(baseValue / 100) * 2} kUSD</td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Price impact</td>\n                                <td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue == 0 ? 0 : priceImpact.toFixed(2)}%</td>\n                            </tr>\n                            <tr style={{ width: \"100%\" }}>\n                                <td style={{ width: \"70%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Slippage tolerance</td>\n                                <td style={{ width: \"30%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>2%</td>\n                            </tr>\n                        </tbody>\n\n                    </table>\n                </Modal.Body>\n                <Modal.Footer style={{ border: \"none\" }} >\n                    {isTxn ? (<span style={{ width: \"100% !important\", position: \"relative\", left: \"-35%\" }}><ScaleLoader color='#E01B3C' width={7} margin={6} /> </span>) : (\n                        <Button variant=\"secondary\"\n                            style={{ minWidth: \"98%\", background: \"#e01b3c\", fontWeight: \"bold\" }}\n                            onClick={async () => {\n\n\n                                try {\n                                    setIsTxn(true)\n                                    await decreasePosition(rangeValue, baseValue).then(res => {\n                                        gethistory()\n                                        setDecreaseshow(false)\n                                        setCPosiitonUpdated(true)\n                                        setIsTxn(false)\n                                        if (res == undefined) {\n                                            setType(\n                                                {\n                                                    type: \"Failed\",\n                                                    message: \"Transaction Aborted !\",\n                                                }\n                                            )\n                                            setSnackbarshow(true)\n                                        } else {\n                                            setType(\n                                                {\n                                                    type: \"success\",\n                                                    message: \"Transaction Successful!,\",\n                                                    transaction: res\n                                                }\n                                            )\n                                            setSnackbarshow(true)\n                                        }\n                                    }).catch(err => {\n                                        setIsTxn(false)\n\n                                        setType(\n                                            {\n                                                type: \"Failed\",\n                                                message: \"Transaction Failed !\",\n                                            }\n                                        )\n                                        setSnackbarshow(true)\n                                    })\n\n                                }\n                                catch (err) {\n                                    console.log(err)\n                                    setIsTxn(false)\n\n                                }\n                            }\n                            }\n                        >\n                            DECREASE\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n\n\n\n        </>\n    )\n}\n// {isTxn ? <span style={{ width: \"100% !important\", position: \"relative\", left: \"35%\" }}><ScaleLoader color='#E01B3C' width={7} margin={6} /></span> :","import React, { useRef, useLayoutEffect, useState, useEffect } from 'react';\nimport am5themes_Responsive from \"@amcharts/amcharts5/themes/Responsive\";\nimport am5themes_Dark from \"@amcharts/amcharts5/themes/Dark\";\nimport * as am5 from \"@amcharts/amcharts5\";\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\nimport * as am5stock from \"@amcharts/amcharts5/stock\";\nimport $ from 'jquery'\nimport iO from 'socket.io-client'\nimport qs from 'qs'\nimport axios from 'axios';\nimport Position from './Position';\n\n\nconst socket = iO('https://zenith-api-l8hhy.ondigitalocean.app/');\n\n\n\nfunction TradeChart(props) {\n  const [activecandle, setActivecandle] = useState(\"5minute\")\n  const chartRef = useRef(null);\n\n  useLayoutEffect(() => {\n\n\n\n    let root = am5.Root.new(\"chartdiv\");\n    const myTheme = am5.Theme.new(root);\n    \n    myTheme.rule(\"Candlestick\").states.create(\"riseFromOpen\", {\n      fill: am5.color(0xECC89),\n      stroke: am5.color(0xECC89)\n    });\n    \n    myTheme.rule(\"Candlestick\").states.create(\"dropFromOpen\", {\n      fill: am5.color(0xE01B3C),\n      stroke: am5.color(0xE01B3C)\n    });\n\n    root.setThemes([\n      am5themes_Dark.new(root),\n      am5themes_Responsive.new(root),\n      myTheme\n    ]);\n    \n\n    let stockChart = root.container.children.push(\n      am5stock.StockChart.new(root, {})\n    );\n\n    root.numberFormatter.set(\"numberFormat\", \"#,###.000\");\n\n    let mainPanel = stockChart.panels.push(\n      am5stock.StockPanel.new(root, {\n        wheelY: \"zoomX\",\n        panX: true,\n        panY: true,\n        \n      })\n    );\n\n    let valueAxis = mainPanel.yAxes.push(\n      am5xy.ValueAxis.new(root, {\n        renderer: am5xy.AxisRendererY.new(root, {\n          pan: \"zoom\"\n        }),\n        maxPrecision: 3,\n        tooltip: am5.Tooltip.new(root, {}),\n        numberFormat: \"#,###.000\",\n        extraTooltipPrecision: 3\n      })\n    );\n\n    let timeunit = \"minute\";\n    if (activecandle == \"hour\") {\n      timeunit = \"hour\"\n    }\n    else if (activecandle == \"day\") {\n      timeunit = \"day\"\n    }\n\n\n    let dateAxis = mainPanel.xAxes.push(\n      am5xy.GaplessDateAxis.new(root, {\n        baseInterval: {\n          timeUnit: timeunit,\n          count: 1\n        },\n        renderer: am5xy.AxisRendererX.new(root, {}),\n        tooltip: am5.Tooltip.new(root, {})\n      })\n    );\n\n\n    let currentValueDataItem = valueAxis.createAxisRange(valueAxis.makeDataItem({ value: 0 }));\n    let currentLabel = currentValueDataItem.get(\"label\");\n    if (currentLabel) {\n      currentLabel.setAll({\n        fill: am5.color(0xffffff),\n        background: am5.Rectangle.new(root, { fill: am5.color(0x000000) }),\n      })\n    }\n\n    let currentGrid = currentValueDataItem.get(\"grid\");\n    if (currentGrid) {\n      currentGrid.setAll({ strokeOpacity: 0.5, strokeDasharray: [2, 5] });\n    }\n\n\n    let valueSeries = mainPanel.series.push(\n      am5xy.CandlestickSeries.new(root, {\n        clustered: false,\n        valueXField: \"Date\",\n        valueYField: \"Close\",\n        highValueYField: \"High\",\n        lowValueYField: \"Low\",\n        openValueYField: \"Open\",\n        calculateAggregates: true,\n        xAxis: dateAxis,\n        yAxis: valueAxis,\n        legendValueText:\n          \"open: [bold]{openValueY}[/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]\",\n        legendRangeValueText: \"\"\n      })\n    );\n\n\n    stockChart.set(\"stockSeries\", valueSeries);\n\n\n    let valueLegend = mainPanel.plotContainer.children.push(\n      am5stock.StockLegend.new(root, {\n        stockChart: stockChart,\n        visible: true,\n        width:\"200px\",\n      })\n    );\n\n\n    valueLegend.data.setAll([valueSeries]);\n\n    mainPanel.set(\n      \"cursor\",\n      am5xy.XYCursor.new(root, {\n        yAxis: valueAxis,\n        xAxis: dateAxis,\n        snapToSeries: [valueSeries],\n        snapToSeriesBy: \"y!\"\n      })\n    );\n\n    let scrollbar = mainPanel.set(\n      \"scrollbarX\",\n      am5xy.XYChartScrollbar.new(root, {\n        orientation: \"horizontal\",\n        height: 50,\n        visible: false\n      })\n    );\n    stockChart.toolsContainer.children.push(scrollbar);\n\n    let sbDateAxis = scrollbar.chart.xAxes.push(\n      am5xy.GaplessDateAxis.new(root, {\n        baseInterval: {\n          timeUnit: timeunit,\n          count: 1\n        },\n        \n        renderer: am5xy.AxisRendererX.new(root, {\n        })\n      })\n    );\n\n    let sbValueAxis = scrollbar.chart.yAxes.push(\n      am5xy.ValueAxis.new(root, {\n        renderer: am5xy.AxisRendererY.new(root, {})\n      })\n    );\n\n    let sbSeries = scrollbar.chart.series.push(\n      am5xy.LineSeries.new(root, {\n        valueYField: \"Close\",\n        valueXField: \"Date\",\n        xAxis: sbDateAxis,\n        yAxis: sbValueAxis\n      })\n    );\n\n    sbSeries.fills.template.setAll({\n      visible: true,\n      fillOpacity: 0.3\n    });\n\n\n    function loadData() {\n\n      let data1 = qs.stringify({ \"granularity\": activecandle })\n\n      axios.post('https://zenith-api-l8hhy.ondigitalocean.app/granularity', data1, {\n        headers: {\n          'Content-Type': \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        let data = res.data\n       \n        \n        let processor = am5.DataProcessor.new(root, {\n          \n          dateFields: [\"Date\"],\n          dateFormat: \"yyyy.MM.dd G 'at' HH:mm:ss zzz\",\n          numericFields: [\"Open\", \"High\", \"Low\", \"Close\"]\n        });\n\n        processor.processMany(data)\n        \n        valueSeries.data.setAll(data);\n        sbSeries.data.setAll(data);\n      }).catch(err => console.log(err))\n    }\n\n    loadData()\n\n\n    let previousDate;\n\n    const greet = (data) => {\n      let valueSeries = stockChart.get(\"stockSeries\");\n\n      let lastDataObject = valueSeries.data.getIndex(valueSeries.data.length - 1);\n      if (lastDataObject == undefined) {\n        return\n      }\n\n\n      let high = lastDataObject.High;\n      let low = lastDataObject.Low;\n      let open = lastDataObject.Open;\n\n      let value = data\n      if (value > high) {\n        high = value;\n      }\n\n      if (value < low) {\n        low = value;\n      }\n\n      let dObj2 = {\n        Date: lastDataObject.Date,\n        Close: value,\n        Open: open,\n        Low: low,\n        High: high\n      };\n      let processor = am5.DataProcessor.new(root, {\n        dateFields: [\"Date\"],\n        dateFormat: \"yyyy-MM-dd HH:mm:ss\",\n        numericFields: [\"Open\", \"High\", \"Low\", \"Close\"]\n      });\n      processor.processMany(dObj2);\n\n      console.log(valueSeries.data.length)\n      valueSeries.data.setIndex(valueSeries.data.length - 1, dObj2);\n      sbSeries.data.setIndex(sbSeries.data.length - 1, dObj2);\n      console.log(valueSeries.data.getIndex(valueSeries.data.length - 1))\n      // update current value\n      if (currentLabel) {\n        currentValueDataItem.animate({ key: \"value\", to: value, duration: 500, easing: am5.ease.out(am5.ease.cubic) });\n        currentLabel.set(\"text\", stockChart.getNumberFormatter().format(value));\n        let bg = currentLabel.get(\"background\");\n        if (bg) {\n          if (value < open) {\n            bg.set(\"fill\", root.interfaceColors.get(\"negative\"));\n          }\n          else {\n            bg.set(\"fill\", root.interfaceColors.get(\"positive\"));\n          }\n        }\n      }\n    }\n\n    const insertvalue = (data) => {\n\n      let date = Date.now();\n\n\n      let valueSeries = stockChart.get(\"stockSeries\");\n      let lastDataObject = valueSeries.data.getIndex(valueSeries.data.length - 1);\n      if (lastDataObject == undefined) {\n        return\n      }\n\n\n\n      if (activecandle == \"15minute\") {\n        if (((lastDataObject.Date - date) / 1000) < 900) {\n          greet(data)\n          return\n        }\n      }\n      else if (activecandle == \"hour\") {\n        if (((lastDataObject.Date - date) / 1000) < 3600) {\n          greet(data)\n          return\n        }\n      }\n      else if (activecandle == \"day\") {\n        if (((lastDataObject.Date - date) / 1000) < 86400) {\n          greet(data)\n          return\n        }\n      }\n\n      let open = lastDataObject.Open;\n      let value = data\n      let dObj1 = {\n\n        Date: date,\n        Close: value,\n        Open: value,\n        Low: value,\n        High: value\n      };\n      let processor = am5.DataProcessor.new(root, {\n        dateFields: [\"Date\"],\n        dateFormat: \"yyyy-MM-dd HH:mm:ss\",\n        numericFields: [\"Open\", \"High\", \"Low\", \"Close\"]\n      });\n      processor.processMany(dObj1);\n      valueSeries.data.push(dObj1);\n      sbSeries.data.push(dObj1);\n      previousDate = date;\n\n\n      if (currentLabel) {\n        currentValueDataItem.animate({ key: \"value\", to: value, duration: 500, easing: am5.ease.out(am5.ease.cubic) });\n        currentLabel.set(\"text\", stockChart.getNumberFormatter().format(value));\n        let bg = currentLabel.get(\"background\");\n        if (bg) {\n          if (value < open) {\n            bg.set(\"fill\", root.interfaceColors.get(\"negative\"));\n          }\n          else {\n            bg.set(\"fill\", root.interfaceColors.get(\"positive\"));\n          }\n        }\n      }\n    }\n\n\n    socket.on(\"data4\", (data) => {\n      console.log(data)\n\n      greet(data)\n    })\n    socket.on(\"data3\", (data) => {\n      insertvalue(data)\n    })\n    // let toolbar = am5stock.StockToolbar.new(root, {\n    //   container: document.getElementById(\"chartcontrols\"),\n    //   stockChart: stockChart,\n    //   controls: [\n    //     am5stock.IndicatorControl.new(root, {\n    //       stockChart: stockChart,\n    //       legend: valueLegend\n    //     }),\n    //     am5stock.DrawingControl.new(root, {\n    //       stockChart: stockChart\n    //     }),\n    //     am5stock.ResetControl.new(root, {\n    //       stockChart: stockChart\n    //     }),\n    //     am5stock.SettingsControl.new(root, {\n    //       stockChart: stockChart\n    //     })\n    //   ]\n    // })\n\n    chartRef.current = stockChart;\n    return () => {\n      root.dispose();\n    };\n  }, [activecandle]);\n\n\n\n  return (\n    <>\n      <style>{`\n\n#chartcontrols {\n  left: 450px;\n  position: absolute;\n  margin-top: -5px;\n  }\n\n\n  #chartdiv {\n    width: 100%;\n    height: 55vh;\n    max-width: 100%;\n    position: relative;\n  }\n\n  // .am5stock-control-button {\n  //   box-sizing: border-box;\n  //   max-height: 200px;\n  //   font-size:12px;\n  //   opacity:1;\n  // }\n  // .am5stock-control-button{\n  //   box-sizing: border-box;\n  //   max-height: 200px;\n  // }\n  // .am5stock .am5stock-control-list-container{\n  //   position:absolute;\n  //   top:-11px;\n  //   left:-2px;\n  //   z-index:1;\n  //   min-height:100%;\n  //   box-sizing:border-box;\n  //   display:flex !important;\n  // }\n\n  // .am5stock-control-list{\n  //   display:flex !important;\n  // }\n  // .am5stock-control-list-arrow{\n  //   display:none;\n  // }\n  .am5stock-control-list-container{\n    max-height: 350px;\n    overflow-y: scroll;\n  }\n  // .am5stock-control-drawing-tools{\n  //   display: block;\n  // position: absolute;\n  //   display:none\n  // }\n  // .am5stock-control-dropdown{\n  //   font-size:12px;\n  // }\n  .am5stock-link {\n    color:white;\n    text-decoration:none;\n  }\n  .active{\n    background :#281e3d;\n    \n  }\n  .logohide{\n    margin-top:-19px;\n    position: absolute;\n    width:60px;\n    height:15px;\n    background:#000614;\n    z-index:1;\n  }\n  .candletime{\n    margin:0 8px;\n    min-width:60px;\n    border-radius:5px;\n    color:white;\n    border:none;\n    background:none;\n  }\n  .active{\n    background:#59219d;\n  }\n@media screen and (max-width:766px) and (min-width:270px){\n  #chartdiv {\n    width: 100%;\n    height: 40vh;\n    max-width: 100%;\n    position: relative;\n  }\n  #chartcontrols {\n   display:none\n    }\n}\n\n      `}</style>\n      {/* <div  id=\"chartcontrols\"></div> */}\n      <ul className='candletimediv'>\n        <button className={`${activecandle == '5minute' ? 'active' : ''} candletime`} onClick={() => setActivecandle(\"5minute\")} >5min</button>\n        <button className={`${activecandle == '15minute' ? 'active' : ''} candletime`} onClick={() => setActivecandle(\"15minute\")} >15min</button>\n        <button className={`${activecandle == 'hour' ? 'active' : ''} candletime`} onClick={() => setActivecandle(\"hour\")}>Hour</button>\n        <button className={`${activecandle == 'day' ? 'active' : ''} candletime`} onClick={() => setActivecandle(\"day\")}>Day</button>\n      </ul>\n\n      <div id=\"chartdiv\"></div>\n      <span className='logohide'></span>\n\n    </>\n  );\n}\n\nexport default TradeChart;\n\n$(document).ready(function () {\n  $(\".am5stock-list-item\").last().addClass(\"active\");\n  $(\".am5stock-list-item\").click(function () {\n    $(\".am5stock-list-item\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n  });\n});","import React, { useEffect, useState,useContext } from 'react'\nimport { Table } from 'react-bootstrap';\nimport { getAccount } from '../utils/wallet';\nimport axios from 'axios'\nimport qs from \"qs\"\nimport UserContext from '../ContextProvider.js';\nexport default function PositionTable() {\nconst { CPosiitonUpdated ,kusdTokenBalance} = useContext(UserContext)\n\n    const [getData,setGetData] = useState([])\n    const fetchdata =async()=>{\n        const address = await getAccount()\n        const positionhistory = await axios.post(\"https://zenith-api-l8hhy.ondigitalocean.app/positionshistory/\", qs.stringify({\n\t\t\taddress: address\n\t\t}),\n\t\t\t{\n\t\t\t\theader: {\n\t\t\t\t\t\"Content-Type\": \"text/plain\"\n\t\t\t\t}\n\t\t\t}\n\t\t).then(res => {\n\t\t\treturn res.data\n\t\t})\n        if(positionhistory){\n            setGetData(positionhistory)\n            positionhistory.reverse()\n        }else{\n            setGetData([])\n        }\n    }\n    useEffect(()=>{\n     fetchdata()\n    },[CPosiitonUpdated,kusdTokenBalance])\n  return (\n    \n    <Table className='trading_details' borderless=\"false\" responsive>\n    <thead>\n        <tr>\n            <th >TIME</th>\n            <th >DIRECTION</th>\n            <th >COLLATERAL</th>\n            <th>POSITION SIZE</th>\n            <th >REALIZE PNL</th>\n        </tr>\n    </thead>\n    <tbody >\n        \n            \n        \n        {\n            getData.length != 0 ? (\n                getData.map((item, index) => {\n                    \n                    const date = new Date(item.time);\n                    return(\n                        <tr key={index}>\n                        <td>{date.toLocaleString() } </td>\n                        {item.position ==1?(<td style={{color:\"#1ecc89\"}}>Long {item.liquidate == undefined ||!item.liquidate?\"\": <span style={{fontSize:\"0.6rem\" , color:\"white\",background:\"#59219d\",padding:\"3px\",borderRadius:\"5px\"}}>liquidated</span>}</td>):(\n                            <td style={{color:\"#e01b3c\"}}>Short {item.liquidate == undefined ||!item.liquidate?\"\": <span style={{fontSize:\"0.6rem\" , color:\"white\",background:\"#59219d\",padding:\"3px\",borderRadius:\"5px\"}}>liquidated</span>}</td>\n                        )}\n                        <td> {item.collateral_amount}</td>\n                        <td>{item.vUSD_amount} </td>\n                      {item.realizedpnl>0?(\n                            <td style={{color:\"#1ecc89\"}}>{(parseFloat(item.realizedpnl)).toFixed(3)}</td>\n                        ):(\n                            <td style={{color:\"#e01b3c\"}}>{(parseFloat(item.realizedpnl)).toFixed(3)}</td>\n                        )}\n\n                    </tr>\n                    )\n                \n                })\n            ) : (<tr style ={{display:\"flex\",width:\"100%\", justifyContent:\"center\",alignItems:\"center\"}}><td><img style ={{height:\"100px\",width:\"100px\"}} src=\"img/nodata.png\" /></td></tr>)\n\n\n        }\n    </tbody>\n</Table>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport TradeChart from './TradeChart'\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { Slider } from '@mui/material';\nimport { openPosition } from '../utils/tezos'\nimport { getAccount } from '../utils/wallet';\nimport axios from 'axios';\nimport \"../style/tradeModel.css\"\nimport SnackbarUtils from '../utils/SnackbarUtils';\nimport { ScaleLoader } from 'react-spinners'\nimport Position from './Position';\nimport PositionTable from './PositionTable';\nimport Snackbar from './Snackbar'\nimport UserContext from \"../ContextProvider.js\";\nimport { PRECISION, CONTRACT_ADDRESS } from '../utils/config';\nimport { math } from '@amcharts/amcharts5';\n\n\nconst style = {\n\tposition: 'absolute',\n\tbackground: \" #141724\",\n\ttop: '50%',\n\tleft: '50%',\n\ttransform: 'translate(-50%, -50%)',\n\tp: 4,\n\t'& > :not(style)': { m: 1, width: '25ch' },\n};\n\nconst Trade = (props) => {\n\tconst { setCPosiitonUpdated, CPosiitonUpdated, setMarketPrice, kusdTokenBalance } = useContext(UserContext)\n\tconst [open, setOpen] = useState(false);\n\tconst handleOpen = () => setOpen(true);\n\tconst handleClose = () => setOpen(false);\n\tconst { coinSelect, setCoinSelect } = props\n\tconst [rangeValue, setRangeValue] = useState(1)\n\tconst [isPosition, setIsPosition] = useState(\"\")\n\tconst [baseValue, setBaseValue] = useState('');\n\tconst [baseXrange, setbaseXrange] = useState(0);\n\tconst [liveposition, setliveposition] = useState({});\n\tconst [isTxn, setIsTxn] = useState(false);\n\tconst [currentPosition, setCurrentPosition] = useState(false)\n\tconst [graphValues, setGraphValues] = useState({\n\t\tmarketprice: 0,\n\t\tindexprice: 0,\n\t\trate: 0,\n\t\tlongfundingrate: 0,\n\t\tshortfundingrate: 0,\n\t\tExpectedshortfundingrate: 0,\n\t\tExpectedlongfundingrate: 0,\n\t\texpectedpay:1\n\t})\n\tconst [show, setShow] = useState(false)\n\tconst [Vmm, setVmm] = useState(0)\n\tconst [priceImpact, setPriceImpact] = useState(0)\n\tconst [snackbarshow, setSnackbarshow] = useState(false)\n\tconst [type, setType] = useState(\n\t\t{\n\t\t\ttype: \"\",\n\t\t\tmessage: \"\",\n\t\t\ttransaction: \"\"\n\t\t}\n\t)\n\n\n\tconst getHistory = async () => {\n\t\tconst address = await getAccount()\n\n\t\tconst history = await axios.get(`https://api.ghostnet.tzkt.io/v1/contracts/${CONTRACT_ADDRESS}/storage`)\n\t\tlet date = Date.parse(history.data.upcoming_funding_time) - Date.now()\n\t\tvar minutes = Math.floor((date % (1000 * 60 * 60)) / (1000 * 60));\n\t\tvar seconds = Math.floor((date % (1000 * 60)) / 1000);\n\n\t\tif (seconds < 0) {\n\t\t\tminutes = \"00\";\n\t\t\tseconds = \"00\";\n\t\t}\n\t\telse {\n\t\t\tif (minutes < 10) {\n\t\t\t\tminutes = `0${minutes}`\n\t\t\t}\n\t\t\tif (seconds < 10) {\n\t\t\t\tseconds = `0${seconds}`\n\t\t\t}\n\t\t}\n\n\t\tlet Vmmdata = {\n\t\t\tinvariant: history.data.vmm.invariant / PRECISION,\n\t\t\tvUSD_amount: history.data.vmm.vUSD_amount / PRECISION,\n\t\t\ttoken_amount: history.data.vmm.token_amount / PRECISION\n\t\t}\n\t\tsetVmm(Vmmdata)\n\t\tsetMarketPrice((parseFloat(history.data.current_mark_price) / PRECISION).toFixed(4))\n\n\t\tvar fundingRate = ((parseFloat(history.data.current_mark_price) / PRECISION)-(parseFloat(history.data.current_index_price) / PRECISION))/24\n\t\tvar avrageValue = ((parseFloat(history.data.current_mark_price) / PRECISION)+(parseFloat(history.data.current_index_price) / PRECISION))/2\n\t\tvar percentagevalue = (fundingRate/avrageValue)*100\n\t\tvar expectedlongrate =0\n\t\tvar expectedshortrate=0\n\t\tvar positiveorneagative\n\t\tif(fundingRate<0){\n\t\t\tpositiveorneagative =2\n\t\t\texpectedlongrate = percentagevalue\n\t\t\texpectedshortrate = (history.data.total_long/history.data.total_short)*percentagevalue\n\t\t}\n\t\telse{\n\t\t\tpositiveorneagative =1\n\t\t\texpectedshortrate = percentagevalue\n\t\t\texpectedlongrate = (history.data.total_short/history.data.total_long)*percentagevalue \n\t\t}\n\n\t\tconsole.log(expectedlongrate)\n\t\tconsole.log(expectedshortrate)\n\t\tsetGraphValues({\n\t\t\tmarketprice: (parseFloat(history.data.current_mark_price) / PRECISION).toFixed(4),\n\t\t\tindexprice: (parseFloat(history.data.current_index_price) / PRECISION).toFixed(4),\n\t\t\tfundingTime: `${minutes}:${seconds}`,\n\t\t\trate: 0,\n\t\t\tlongfundingrate: (history.data.long_funding_rate),\n\t\t\tshortfundingrate: (history.data.short_funding_rate),\n\t\t\tExpectedshortfundingrate:Math.abs(expectedshortrate),\n\t\t\tExpectedlongfundingrate:Math.abs(expectedlongrate) ,\n\t\t\texpectedpay:positiveorneagative\n\t\t})\n\t\tvar positions = history.data.positions;\n\n\t\tif (address in positions) {\n\n\t\t\tsetCPosiitonUpdated(true)\n\n\t\t\tsetCurrentPosition(true)\n\t\t\tsetliveposition(positions[address])\n\t\t}\n\t\telse {\n\t\t\tsetCPosiitonUpdated(false)\n\t\t\tsetCurrentPosition(false)\n\t\t\tsetliveposition({})\n\t\t}\n\n\t}\n\n\tconst addBaseValue = async (value) => {\n\t\tvar amount = (kusdTokenBalance / 100) * value\n\t\tsetBaseValue(amount)\n\t}\n\n\n\n\tuseEffect(() => {\n\t\tif (graphValues.marketprice == 0) {\n\t\t\tgetHistory()\n\t\t}\n\t\tsetInterval(getHistory, 1000)\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetbaseXrange(baseValue * rangeValue)\n\t\tif (isPosition == \"long\") {\n\n\t\t\tsetOpenlongpriceImpact()\n\t\t}\n\t\telse {\n\t\t\tsetOpenshortpriceImpact()\n\t\t}\n\t}, [baseValue, rangeValue, baseXrange])\n\n\n\n\n\tconst funOpenPosition = async (baseValue, rangeValue, direction) => {\n\t\tif (baseValue == 0) {\n\t\t\tsetType(\n\t\t\t\t{\n\t\t\t\t\ttype: \"failed\",\n\t\t\t\t\tmessage: \"Amount should be greater than 0!\",\n\t\t\t\t}\n\t\t\t)\n\t\t\tsetSnackbarshow(true)\n\t\t}\n\n\t\ttry {\n\t\t\tsetIsTxn(true)\n\t\t\tawait openPosition(baseValue, rangeValue, direction).then(res => {\n\t\t\t\tsetIsPosition(false)\n\t\t\t\tsetIsTxn(false)\n\t\t\t\tif (res == undefined) {\n\t\t\t\t\tsetType(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"Failed\",\n\t\t\t\t\t\t\tmessage: \"Transaction Aborted !\",\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\tsetSnackbarshow(true)\n\t\t\t\t} else {\n\t\t\t\t\tsetType(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\t\tmessage: \"Transaction Successful!\",\n\t\t\t\t\t\t\ttransaction: res\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\tsetSnackbarshow(true)\n\t\t\t\t\tsetCPosiitonUpdated(true)\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.log(err)\n\t\t\tsetIsPosition(false)\n\t\t\tsetShow(false)\n\t\t\tsetIsTxn(false)\n\t\t\tsetType(\n\t\t\t\t{\n\t\t\t\t\ttype: \"Failed\",\n\t\t\t\t\tmessage: \"Transaction Failed !,\",\n\t\t\t\t}\n\t\t\t)\n\t\t\tsetSnackbarshow(true)\n\n\t\t}\n\n\t}\n\n\n\n\tconst setOpenlongpriceImpact = () => {\n\n\t\tlet perUsd = Vmm.vUSD_amount / Vmm.token_amount\n\t\tlet VmmUsd = Vmm.vUSD_amount + (baseXrange);\n\t\tlet x = (Vmm.invariant / VmmUsd) - Vmm.token_amount\n\t\tlet actualToken = (baseXrange) / Math.abs(x)\n\t\tlet priceimpact = ((actualToken - perUsd) * 100) / perUsd\n\t\tsetPriceImpact(priceimpact)\n\t}\n\tconst setOpenshortpriceImpact = () => {\n\t\tlet pertoken = Vmm.token_amount / Vmm.vUSD_amount\n\t\tlet Vmmtoken = Vmm.vUSD_amount - (baseXrange);\n\t\tlet x = (Vmm.invariant / Vmmtoken) - Vmm.token_amount\n\t\tlet actualToken = Math.abs(x) / (baseXrange)\n\t\tlet priceimpact = ((actualToken - pertoken) * 100) / pertoken\n\t\tsetPriceImpact(priceimpact)\n\t}\n\n\n\n\n\treturn (\n\t\t<div>\n\t\t\t<Snackbar show={snackbarshow} setshow={setSnackbarshow} type={type} />\n\t\t\t<link rel=\"stylesheet\" href=\"/styles/trade.css\" />\n\t\t\t<div className=\"coin-name d-flex m-3\">\n\t\t\t\t<div className=\"icon fs-2\"><img style={{ width: \"35px\", height: \"35px\" }} src={`img/${coinSelect === 'tezos' ? 'tz' : coinSelect === 'btc' ? 'btc' : 'eth'}.svg`} alt=\"\" /></div>\n\t\t\t\t<div className=\"coin-name d-flex flex-column ms-2\">\n\t\t\t\t\t<h4 className='mb-0 text-start'>{coinSelect === 'tezos' ? 'XTZ-PERP' : coinSelect === 'btc' ? 'BTC-PERP' : 'ETH-PERP'}</h4>\n\t\t\t\t\t<h6 className='text-start'>{coinSelect === 'tezos' ? 'Tezos' : coinSelect === 'btc' ? 'Bitcoin' : 'Ethereum'}</h6>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"trade-graph-enclosure\">\n\t\t\t\t<div className=\"graph-infos d-flex text-start\">\n\t\t\t\t\t<div className=\"graph-info\">\n\t\t\t\t\t\t<div className=\"info-title\">Market Price</div>\n\t\t\t\t\t\t<div className=\"info-values \" style={{ color: \"#1ECC89\" }}>{graphValues.marketprice} kUSD</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"graph-info\">\n\t\t\t\t\t\t<div className=\"info-title\">Index Price</div>\n\t\t\t\t\t\t<div className=\"info-values\">{graphValues.indexprice} kUSD</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"graph-info\">\n\t\t\t\t\t\t<div className=\"info-title\">Next funding</div>\n\t\t\t\t\t\t<div className=\"info-values\"> {graphValues.fundingTime}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"graph-info\">\n\t\t\t\t\t\t<div className=\"info-title\"> Long funding rate</div>\n\n\t\t\t\t\t\t<div className=\"info-values \" style={{ color: `${graphValues.longfundingrate.direction == \"POSITIVE\" && graphValues.longfundingrate.value / PRECISION != 0 ? \"#1ECC89\" : (graphValues.longfundingrate.direction == \"NEGATIVE\" && graphValues.longfundingrate.value / PRECISION != 0) ? \"#E01B3C\" : \"white\"}` }}> {graphValues.longfundingrate.direction == \"POSITIVE\" ?(graphValues.longfundingrate.value / PRECISION).toFixed(3):(-graphValues.longfundingrate.value / PRECISION).toFixed(3)}% </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"graph-info\">\n\t\t\t\t\t\t<div className=\"info-title\"> Short funding rate</div>\n\t\t\t\t\t\t<div className=\"info-values\" style={{ color: `${graphValues.shortfundingrate.direction == \"POSITIVE\" ? \"#1ECC89\" : graphValues.shortfundingrate.direction == \"NEGATIVE\" && graphValues.shortfundingrate.value / PRECISION != 0 ? \"#E01B3C\" : \"white\"}` }}>{graphValues.shortfundingrate.direction == \"POSITIVE\" ?(graphValues.shortfundingrate.value / PRECISION).toFixed(3):(-graphValues.shortfundingrate.value / PRECISION).toFixed(3)}%</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"graph-info\">\n\t\t\t\t\t\t<div className=\"info-title\"> Expected long/short rate</div>\n\t\t\t\t\t\t<div className=\"info-values\" ><span style={{ color: `${graphValues.expectedpay==1?\"#E01B3C\":\"#1ECC89\"}`}}>{graphValues.expectedpay==1?((-graphValues.Expectedlongfundingrate).toFixed(3)):(graphValues.Expectedlongfundingrate).toFixed(3)}%</span> / <span style={{ color: `${graphValues.expectedpay==1?\"#1ECC89\":\"#E01B3C\"}`}}>{graphValues.expectedpay==2?((-graphValues.Expectedshortfundingrate).toFixed(3)):(graphValues.Expectedshortfundingrate).toFixed(3)}%</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"long-short-enclosure\">\n\t\t\t\t{\n\t\t\t\t\t!currentPosition ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h5>You can go Long or Short </h5>\n\t\t\t\t\t\t\t<div className=\"long-short-btns mt-4\">\n\t\t\t\t\t\t\t\t<button className={`longbtn  mx-1 btn  `} style={{ color: \"white\", fontWeight: \"bold\", background: \"#1ECC89\" }} onClick={() => {\n\t\t\t\t\t\t\t\t\tsetIsPosition(\"long\")\n\t\t\t\t\t\t\t\t\thandleOpen()\n\t\t\t\t\t\t\t\t}} >Long</button>\n\t\t\t\t\t\t\t\t<button className={`shortbtn mx-1 btn `} style={{ color: \"white\", fontWeight: \"bold\", background: \"#E01B3C\" }} onClick={() => {\n\t\t\t\t\t\t\t\t\tsetIsPosition(\"short\")\n\t\t\t\t\t\t\t\t\thandleOpen()\n\t\t\t\t\t\t\t\t\tSnackbarUtils.info(\"Works\");\n\t\t\t\t\t\t\t\t}} >Short</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (<h5>You have taken a position. Now you can change the margin </h5>)\n\t\t\t\t}\n\n\t\t\t</div>\n\n\t\t\t<div className='trade_chart'>\n\t\t\t\t<TradeChart />\n\n\t\t\t</div>\n\n\t\t\t{\n\t\t\t\t!currentPosition ? \"\" : (\n\t\t\t\t\t<Position positiondetail={liveposition} graph={graphValues} gethistory={getHistory} Vmm={Vmm} />\n\t\t\t\t)\n\t\t\t}\n\n\n\n\n\n\n\n\n\t\t\t<div className=\"history-enclosure text-white\">\n\n\n\t\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t\t<h5 className={`tradedetailsbtn text-start`} style={{ color: \"whitesmoke\" }}>Position History</h5>\n\t\t\t\t</div>\n\n\n\n\t\t\t\t<PositionTable />\n\n\t\t\t</div>\n\n\n\t\t\t{isPosition == \"long\" && !currentPosition ? <Modal\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby=\"modal-modal-title\"\n\t\t\t\taria-describedby=\"modal-modal-description\"\n\t\t\t>\n\t\t\t\t<Box sx={style} className=\"tradebox_main\" component=\"form\" noValidate autoComplete=\"off\">\n\t\t\t\t\t<Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\" style={{ position: \"relative\", left: '-10px', width: '100%', fontFamily: \"'Inter', sans-serif\", fontWeight: \"800\", fontSize: \"25px\" }}>\n\t\t\t\t\t\tLong\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className='tradebox_amount'>\n\t\t\t\t\t\t<span className='tradebox_inputicon'><img style={{ padding: \"0 6px\", marginTop: \"-4px\", height: \"32px\" }} src=\"img/kusd.png\" alt=\"\" />kUSD</span>\n\t\t\t\t\t\t<input value={baseValue} style={{ fontFamily: \"'Inter', sans-serif\" }} type=\"number\" min=\"0\" max=\"100000000\" className=\"tradebox\" id=\"outlined-basic\" placeholder=\"Amount\" variant=\"outlined\" onChange={(event) => setBaseValue(event.target.value, setOpenlongpriceImpact())} />\n\t\t\t\t\t\t<div style={{ width: \"100%\", fontSize: \"11px\", height: \"10px\", fontWeight: \"bold\", margin: \"2px 0\", padding: \"2px 0\", color: \"#a9a9a9\" }}>\n\t\t\t\t\t\t\t<div style={{ position: \"absolute\", right: \"10px\" }}>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(25) }} >25%</button>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(50) }} >50%</button>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(75) }} >75%</button>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(100) }} >100%</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='tradebox_leverage'>\n\t\t\t\t\t\t<h6>Leverage</h6>\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\taria-label=\"Temperature\"\n\t\t\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\t\t\tclassName=\"tradebox_levslider\"\n\t\t\t\t\t\t\tvalue={rangeValue}\n\t\t\t\t\t\t\tonChange={(event) => setRangeValue(event.target.value)}\n\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\tsx={{ color: `grey` }}\n\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\tmarks\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={3}\n\t\t\t\t\t\t\tstyle={{ width: '90%' }} /> <span style={{ position: \"absolute\", bottom: \"6px\", fontSize: \"14px\", right: \"25px\", fontWeight: \"bold\" }}>{rangeValue}x</span> <br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<p style={{ fontFamily: \"'Inter', sans-serif\", fontSize: \"13px\", fontWeight: \"600\", paddingTop: \"20px\", marginLeft: \"-0px\" }}>You are buying in the long</p>\n\t\t\t\t\t<table className='tradebox_table1' style={{ width: \"100%\" }}>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Position size</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseXrange == 0 ? ((baseValue == null) ? 0 : (baseValue / graphValues.marketprice).toFixed(2)) : ((baseXrange / graphValues.marketprice).toFixed(4))} XTZ <img src=\"img/tz.svg\" /></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Entry price</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{graphValues.marketprice} kUSD <img style={{ width: \"20px\" }} src=\"img/kusd.png\" /></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<hr style={{ position: \"relative\", left: \"-10px\", width: \"100%\", top: \"20px\" }} />\n\n\n\t\t\t\t\t<table className='tradebox_table1' style={{ width: \"100%\" }}>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\", }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Amount</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue} kUSD</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"70%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Trading fee</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"30%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{(baseValue / 100) * 2} kUSD</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Price impact</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue == 0 ? 0 : priceImpact.toFixed(2)}%</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"70%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Slippage tolerance</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"30%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>2%</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t{isTxn ? <span style={{ width: \"100% !important\", position: \"relative\", left: \"35%\" }}><ScaleLoader color='#1ECC89' width={7} margin={6} /> </span> : <Button className=\"tradebox_button\" style={{ align: 'center', width: '100%', borderRadius: \"8px\", marginTop: \"20px\", fontWeight: \"600\", backgroundColor: \"#1ECC89\", fontFamily: \"'Inter', sans-serif\" }} variant=\"contained\" color=\"success\"\n\t\t\t\t\t\tonClick={() => funOpenPosition(baseValue, rangeValue, 1)}>Long</Button>}\n\n\n\t\t\t\t</Box>\n\t\t\t</Modal> : isPosition == \"short\" && !currentPosition ? <Modal\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby=\"modal-modal-title\"\n\t\t\t\taria-describedby=\"modal-modal-description\"\n\t\t\t>\n\t\t\t\t<Box sx={style} className=\"tradebox_main\" component=\"form\" noValidate autoComplete=\"off\">\n\t\t\t\t\t<Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\" style={{ position: \"relative\", left: '-10px', width: '100%', fontFamily: \"'Inter', sans-serif\", fontWeight: \"800\", fontSize: \"25px\" }}>\n\t\t\t\t\t\tShort\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className='tradebox_amount'>\n\t\t\t\t\t\t<span className='tradebox_inputicon'><img style={{ padding: \"0 6px\", marginTop: \"-4px\", height: \"32px\" }} src=\"img/kusd.png\" alt=\"\" />kUSD</span>\n\t\t\t\t\t\t<input value={baseValue} style={{ fontFamily: \"'Inter', sans-serif\" }} type=\"number\" min=\"0\" max=\"100000000\" step=\"0.01\" className=\"tradebox\" id=\"outlined-basic\" placeholder=\"Amount\" variant=\"outlined\" onChange={(event) => setBaseValue(event.target.value, setOpenlongpriceImpact())} />\n\t\t\t\t\t\t<div style={{ width: \"100%\", fontSize: \"11px\", height: \"10px\", fontWeight: \"bold\", margin: \"2px 0\", padding: \"2px 0\", color: \"#a9a9a9\" }}>\n\t\t\t\t\t\t\t<div style={{ position: \"absolute\", right: \"10px\" }}>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(25) }} >25%</button>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(50) }} >50%</button>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(75) }} >75%</button>\n\t\t\t\t\t\t\t\t<button type='button' className='amount_percent_btn' onClick={() => { addBaseValue(100) }} >100%</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='tradebox_leverage'>\n\t\t\t\t\t\t<h6>Leverage</h6>\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\taria-label=\"Temperature\"\n\t\t\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\t\t\tclassName=\"tradebox_levslider\"\n\t\t\t\t\t\t\tvalue={rangeValue}\n\t\t\t\t\t\t\tonChange={(event) => setRangeValue(event.target.value)}\n\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\tsx={{ color: `grey` }}\n\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\tmarks\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={3}\n\t\t\t\t\t\t\tstyle={{ width: '90%' }} /> <span style={{ position: \"absolute\", bottom: \"6px\", fontSize: \"14px\", right: \"25px\", fontWeight: \"bold\" }}>{rangeValue}x</span> <br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<p style={{ fontFamily: \"'Inter', sans-serif\", fontSize: \"13px\", fontWeight: \"600\", paddingTop: \"20px\", marginLeft: \"-0px\" }}>You are buying in the long</p>\n\t\t\t\t\t<table className='tradebox_table1' style={{ width: \"100%\" }}>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Position size</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseXrange == 0 ? ((baseValue == null) ? 0 : (baseValue / graphValues.marketprice).toFixed(2)) : ((baseXrange / graphValues.marketprice).toFixed(4))} XTZ <img src=\"img/tz.svg\" /></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", color: \"#797979\", fontWeight: \"600\" }}>Entry price</td>\n\t\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{graphValues.marketprice} kUSD <img style={{ width: \"20px\" }} src=\"img/kusd.png\" /></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t</table>\n\t\t\t\t\t<hr style={{ position: \"relative\", left: \"-10px\", width: \"100%\", top: \"20px\" }} />\n\n\n\t\t\t\t\t<table className='tradebox_table1' style={{ width: \"100%\" }}>\n\t\t\t\t\t\t<tr style={{ width: \"100%\", }}>\n\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Amount</td>\n\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue} kUSD</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t<td style={{ width: \"70%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Trading fee</td>\n\t\t\t\t\t\t\t<td style={{ width: \"30%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{(baseValue / 100) * 2} kUSD</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t<td style={{ width: \"40%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Price impact</td>\n\t\t\t\t\t\t\t<td style={{ width: \"60%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>{baseValue == 0 ? 0 : priceImpact.toFixed(2)}%</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t<td style={{ width: \"70%\", fontFamily: \"'Inter', sans-serif\", fontWeight: \"600\", color: \"#C0C0C0\" }}>Slippage tolerance</td>\n\t\t\t\t\t\t\t<td style={{ width: \"30%\", textAlign: \"end\", fontFamily: \"'Inter', sans-serif\" }}>2%</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t\t{isTxn ? <span style={{ width: \"100% !important\", position: \"relative\", left: \"35%\" }}><ScaleLoader color='#E01B3C' width={7} margin={6} /> </span> : <Button className=\"tradebox_button\" style={{ align: 'center', width: '100%', borderRadius: \"8px\", marginTop: \"20px\", fontWeight: \"600\", backgroundColor: \"#E01B3C\", fontFamily: \"'Inter', sans-serif\" }} variant=\"contained\"\n\t\t\t\t\t\tonClick={() => funOpenPosition(baseValue, rangeValue, 2)}>SHORT</Button>}\n\t\t\t\t</Box>\n\t\t\t</Modal> : \"\"}\n\t\t</div>\n\t)\n}\n\nexport default Trade\n","import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport \"../style/leaderbordcss.css\"\nimport Table from 'react-bootstrap/Table';\nimport Pagination from 'react-bootstrap/Pagination';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport axios from 'axios'\nimport { ClipLoader } from 'react-spinners'\n\n\n\n\nexport default function LeaderBoard() {\n\n  const [searchaddress,setsearchAddress] = useState(\"\")\n  const [isEmpty,setIsEmpty] = useState(false)\n  const [array,setArray] = useState([])\n  const [size,setSize] = useState(0);\n  // const arrsize =Math.trunc(array.length / 10 )+ 1;\n  const [page,setpage] = useState(1)\n  const [startrange, setStartRange] = useState(0)\n  const [range, setRange] = useState()\n\n  const getdata =async()=>{\n    await axios.get(\"https://zenith-api-l8hhy.ondigitalocean.app/leaderboard/\").then(result=>{\n    let data = result.data.reverse();\n    for(let i =0;i<data.length;i++){\n      data[i].rank =i;\n    }\n     setArray(data)\n   })\n   setSize(Math.trunc(array.length/ 10)+ 1);\n   setRange(array.length>10?10:array.length)\n   setIsEmpty(true)\n }\n\n  useLayoutEffect(()=>{\n    getdata()\n\n  },[isEmpty])\n\n\n  const onchange=(e)=>{\n    var newvalue =searchaddress.concat(e)\n    if(e==\"\"){\n\n      axios.get(\"https://zenith-api-l8hhy.ondigitalocean.app/leaderboard/\").then(result=>{\n        let data = result.data.reverse();\n    for(let i =0;i<data.length;i++){\n      data[i].rank =i;\n    }\n     setArray(data)\n      })\n    }\n    else{\n  \n      var newArray = array.filter(function (el)\n      {\n        return el.Address.includes(newvalue)\n               \n      })\n\n        setArray(newArray)\n      \n    }\n   \n\n  }\n  const prevvalues = () => {\n    if (page != 1) {\n      if(range == array.length){\n        setpage(page-1);\n        setStartRange(startrange-10) \n        setRange(startrange)\n       \n      }\n      else{\n        setpage(page-1);\n        setStartRange(startrange-10) \n        setRange(range - 10);\n      }\n\n    }\n\n  }\n  const nextvalues = () => {\n    if (page <= size) {\n      setpage(page+1)\n      if(array.length-range>10){\n        setStartRange(range)\n        setRange(range + 10);\n      }\n      else{\n        setStartRange(range)\n        setRange(array.length)\n      }\n    }\n  }\n  const startpage=()=>{\n    setpage(1);\n    setStartRange(0);\n    setRange(array.length>10?10:array.length)\n  }\n  const Lastpage=()=>{\n    setpage(size);\n    setStartRange((size*10)-10);\n    setRange(array.length)\n    \n  }\n\n\n  return (\n    <div className='LeaderboardMain'>\n      <div className='Leaderboardcontainer'>\n        <input  placeholder='Search..'  onChange={e=>onchange(e.target.value)}  />\n        <h2>\n          All Traders\n        </h2>\n        <div className='table_div'>\n          {\n            isEmpty?(\n<table>\n          <thead>\n          <tr>\n            <th className='leaderboard_head'>Rank</th>\n            <th className='leaderboard_head'>Address</th>\n            <th className='leaderboard_head'>Liquidation</th>\n            <th className='leaderboard_head'>Total Trades</th>\n            <th className='leaderboard_head'>PnL</th>\n          </tr>\n          </thead>\n          <tbody>\n            \n          \n            {\n              isEmpty?(\n                \n                  array.slice(startrange, range).map((item, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className='leaderboard_td' >{item.rank+1}</td>\n                        <td className='leaderboard_td'>{item.Address}</td>\n                        <td className='leaderboard_td'>{item.LiquidationCount== undefined?0:item.LiquidationCount}</td>\n                        <td className='leaderboard_td'>{item.CompletedPosition.length}</td>\n                        <td className='leaderboard_td' style={{color:`${item.Totalpnl<0?\"#e01b3c\":\"#198754\"}`,fontWeight:\"bold\"}}>${parseFloat(item.Totalpnl).toFixed(2)}</td>\n                      </tr>\n                    )\n                  })\n                \n              ):(<tr><td style={{margin:\"auto\",display:\"flex\",justifyContent:\"center\",alignItem:\"center\",width:'100%'}}></td></tr>)\n            }\n          \n          </tbody>\n        </table>\n            ):(\n              <div style={{width:\"100%\",height:\"250px\",marginTop:'100px',display:\"flex\",justifyContent:\"center\",alignItem:\"center\"}}>\n<ClipLoader color='#ffff' width={20} margin={0} />\n\n                </div>\n            )\n          }\n        \n\n        </div>\n        <Pagination>\n          <Pagination.First onClick={startpage}/>\n          <Pagination.Prev onClick={page==1?null:prevvalues }/>\n\n          <Pagination.Item className='middlepagination' >{page} of {size}</Pagination.Item>\n\n          <Pagination.Next onClick={page==size?null:nextvalues} />\n          <Pagination.Last onClick={Lastpage} />\n        </Pagination>\n\n\n\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport Sidebar from './components/Sidebar'\nimport Stake from './components/Stake'\nimport Trade from './components/Trade'\nimport Hamburger from 'hamburger-react'\nimport { connectWallet, getAccount, disconnectWallet } from \"./utils/wallet\";\nimport { getBalance } from './utils/tezos'\nimport LeaderBoard from './components/LeaderBoard'\nimport Snackbar1 from './components/Snackbar'\nimport axios from 'axios'\nimport { PRECISION, vUSD_ADDRESS } from './utils/config'\nimport UserContext from './ContextProvider'\nimport { CONTRACT_ADDRESS } from \"./utils/config\"\nimport { ClipLoader } from 'react-spinners'\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Popover from '@mui/material/Popover';\n\n\n\nconst Main = () => {\n  const { setCPosiitonUpdated, CPosiitonUpdated,setkusdTokenBalance} = useContext(UserContext)\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [Loading, setLoading] = useState(false)\n  const [address, setAddress] = useState(\"\")\n  const [tradeOrStake, setTradeOrStake] = useState('trade')\n  const [coinSelect, setCoinSelect] = useState('tezos');\n  const [account, setAccount] = useState(false);\n  const [isOpen, setOpen] = useState(false)\n  const [show, setshow] = useState(false);\n  const [tokenBalance, setTokenBalance] = useState(\"\")\n  const [popoverOpen, setpopoverOpen] = useState(false)\n  const [type, setType] = useState(\n    {\n      type: \"\",\n      message: \"\",\n      transaction: \"\"\n    }\n  )\n\n\n\n  const gettokendata = async () => {\n    const accounts = await getAccount();\n    if (!accounts) {\n      setTokenBalance('')\n    }\n    else {\n      const getbalacnce = await axios.get(`https://api.ghostnet.tzkt.io/v1/contracts/${vUSD_ADDRESS}/bigmaps/balances/keys/${accounts}`)\n      if (getbalacnce.data == '') {\n        return true\n      }\n      else {\n        setTokenBalance((getbalacnce.data.value.balance / PRECISION).toFixed(2))\n        setkusdTokenBalance((getbalacnce.data.value.balance / PRECISION).toFixed(2))\n      }\n    }\n\n  }\n\n  const onConnectWallet = async () => {\n    await connectWallet();\n    const accounts = await getAccount();\n    setAccount(accounts);\n    gettokendata()\n  };\n\n  const onDisconnectWallet = async () => {\n    await disconnectWallet();\n    setAccount(false);\n    gettokendata()\n\n  };\n\n  useEffect(() => {\n    (async () => {\n      const accounts = await getAccount();\n      setAccount(accounts);\n      setAddress(accounts)\n      await gettokendata();\n    })();\n  }, [CPosiitonUpdated, address, account]);\n\n  const getToken = async () => {\n    setLoading(true)\n    const accounts = await getAccount();\n    if (!accounts) {\n      setType(\n        {\n          type: \"error\",\n          message: \"Connect Your Wallet First\"\n        }\n      )\n      setshow(true)\n      setLoading(false)\n      return\n    }\n\n    await axios.post(\"https://zenith-api-l8hhy.ondigitalocean.app/getToken/\", {\n      address: account\n    }).then((res) => {\n      if (res.data == \"Issued\") {\n        setType(\n          {\n            type: \"success\",\n            message: \"Transaction Done!, Now you can trade\"\n          }\n        )\n        gettokendata()\n        setshow(true)\n        setLoading(false)\n        gettokendata()\n\n      } else if (res.data == \"Already Issued\") {\n        setType(\n          {\n            type: \"error\",\n            message: \"You already issued the tokens\"\n          }\n        )\n        setshow(true)\n        setLoading(false)\n\n      } else {\n        setType(\n          {\n            type: \"error\",\n            message: \"An Error Occured. Please try again!\"\n          }\n        )\n        setshow(true)\n        setLoading(false)\n\n      }\n    })\n  }\n\n  const sidebarmenu = (event) => {\n    setTradeOrStake(event)\n    setOpen(false)\n  }\n\n\n  return (\n    <div className='mainbox d-flex' >\n      <Snackbar1 show={show} setshow={setshow} type={type} />\n      <link rel=\"stylesheet\" href=\"/styles/main.css\" />\n      <div className=\"nav-tab d-flex w-100 \">\n        <div className='Logo'><img style={{ width: \"40px\", height: \"40px\", marginRight: \"10px\" }} src=\"img/Logo.png\" />Zenith</div>\n\n        <div className='tradeNav d-flex '>\n        <div className={`tabs`} ><a href='https://zenith.payperfi.com' target=\"_blank\" rel=\"noopener noreferrer\"><img style={{ width: \"25px\", height: \"25px\" }} src=\"img/home.png\" /> </a></div>\n          <div className={`${tradeOrStake === 'trade' ? 'tabs-sel' : ''} tabs`} onClick={() => { setTradeOrStake('trade') }}>Trade</div>\n          <div className={`${tradeOrStake === 'stake' ? 'tabs-sel' : ''} tabs`} /*onClick={() => { setTradeOrStake('stake') }}*/>Stake <span className=\"comingsoon\">coming soon</span></div>\n          <div className={`${tradeOrStake === 'leaderboard' ? 'tabs-sel' : ''} tabs`} onClick={() => { setTradeOrStake('leaderboard') }}>Leaderboard</div>\n          <div className={`tabs`} ><a href='https://docs.payperfi.com/' style={{ color: \"white\", textDecoration: \"none\" }} target=\"_blank\" rel=\"noopener noreferrer\"> Docs </a></div>\n          \n          <div className={`tabs`} ><a href='https://discord.gg/dgBRfYunrw' target=\"_blank\" rel=\"noopener noreferrer\"><img style={{ width: \"25px\", height: \"25px\" }} src=\"img/discordnav.png\" /> </a></div>\n          <div className='btncustmdiv'>\n            <button style={{ right: \"\" }} className=\" custom_btn\" onClick={getToken} >\n              {!Loading?<span>{tokenBalance == '' ? \"Get Token\" : `${tokenBalance} kUSD`}</span>:<ClipLoader\n              color=\"#ffff\"\n              size={20}\n            /> }\n              \n            </button>\n\n\n        <div>\n          {!account ? <button className=\" custom_btn\" onClick={ onConnectWallet } >\n              {!account ? <span>Connect Wallet</span> : `${address.substring(0, 12)}..`}\n            </button> : <button className=\"custom_btn\"  onClick={()=> {setpopoverOpen(true)\n           setAnchorEl(undefined) } }  >\n              {!account ? <span>Connect Wallet</span> : `${address.substring(0, 12)}..`}\n            </button>}\n          \n        \n          \n <Popover\n open={popoverOpen}\n anchorEl={anchorEl}\n anchorOrigin={{\n  vertical: 'top',\n  horizontal: 'right',\n}}\ntransformOrigin={{\n  vertical: 'top',\n  horizontal: 'left',\n}}\nonClose={()=>setpopoverOpen(false)}\nonRequestClose={()=>setpopoverOpen(false)}\n>\n <Typography sx={{ p: 0 }}><button className=\" custom_btn\" style={{border:\"none\",marginRight:\"0\"}} onClick={()=>{ onDisconnectWallet()\n setpopoverOpen(false)\n}}\n >Disconnect</button></Typography>\n <Typography sx={{ p: 0 }}><button className=\" custom_btn\" style={{border:\"none\",marginRight:\"0\"}} onClick={() => navigator.clipboard\n .writeText(address)\n .then((res) => alert(\"Address Copied\"))}>Copy Address</button></Typography>\n</Popover>\n\n        </div>\n      \n\n            \n\n          </div>\n        </div>\n        <Hamburger className=\"mobileviewcheck\" size={20} toggled={isOpen} toggle={setOpen} />\n      </div>\n      {\n        !account ? (\n          <button className=\"mobileviewconnect\" onClick={onConnectWallet} >{!account ? <span>Connect Wallet</span> : \"Disconnect\"}</button>\n\n        ) : (\n          <button className=\" mobileviewconnect\" style={{minWidth:\"105px\"}} onClick={getToken} >{!Loading?<span>{tokenBalance == '' ? \"Get Token\" : `${tokenBalance} kUSD`}</span>:<ClipLoader\n          color=\"#ffff\"\n          size={20}\n        /> }\n          </button>\n        )\n      }\n\n      <div className={`${isOpen ? \"menubar\" : \"unactivemenu\"}`}>\n        <div className={`mobilemenu`}>\n          <h3 onClick={() => navigator.clipboard\n            .writeText(address)\n            .then((res) => alert(\"Address Copied\"))} ><img src='img/walletimg.png' />{address == \"\" ? \"Wallet\" : address}</h3>\n          <div className=\"mobile_tabs\" onClick={() => { sidebarmenu('trade') }}>Trade</div>\n          <hr />\n          <div className=\"mobile_tabs\" /*onClick={() => { setTradeOrStake('stake') }}*/ >Stake <span className='comingsoonmobileview'>coming soon </span></div>\n          <hr />\n          <div className=\"mobile_tabs\" ><a href='https://payper-finance.gitbook.io/zenith-1/' style={{ color: \"white\", textDecoration: \"none\" }} target=\"_blank\" rel=\"noopener noreferrer\">Docs</a></div>\n          <hr />\n\n          <div className=\"mobile_tabs\" onClick={() => { sidebarmenu('leaderboard') }}>Leaderboard</div>\n          <hr />\n\n\n          <p className=\" mobile_tabs\" onClick={!account ? onConnectWallet : onDisconnectWallet} >{!account ? <span>Connect Wallet</span> : \"Disconnect\"}</p>\n\n        </div>\n      </div>\n        \n      <Sidebar coinSelect={coinSelect} stake={tradeOrStake} setCoinSelect={setCoinSelect} />\n      <div className=\"main-section\">\n\n        {\n          tradeOrStake === 'trade' ? <Trade coinSelect={coinSelect}  setCoinSelect={setCoinSelect} /> : tradeOrStake == \"stake\" ? <Stake /> : (\n            <LeaderBoard />\n          )\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Main\n\n\n\n","\nimport Main from './Main';\nimport {Routes,Route} from 'react-router-dom'\nimport TradeChart from './components/TradeChart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/chart\" element={<TradeChart/>}/>\n        <Route path=\"/\" element={<Main/>}/>\n      </Routes>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from \"notistack\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { ContexProvider } from './ContextProvider.js';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <ContexProvider>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </ContexProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}